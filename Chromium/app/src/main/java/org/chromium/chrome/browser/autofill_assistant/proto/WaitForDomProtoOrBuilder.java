// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface WaitForDomProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.WaitForDomProto)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Fail after waiting this amount of time.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  boolean hasTimeoutMs();
  /**
   * <pre>
   * Fail after waiting this amount of time.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  int getTimeoutMs();

  /**
   * <pre>
   * Wait until there exists at least one element that matches the given
   * selector.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto wait_until = 5;</code>
   */
  boolean hasWaitUntil();
  /**
   * <pre>
   * Wait until there exists at least one element that matches the given
   * selector.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto wait_until = 5;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getWaitUntil();

  /**
   * <pre>
   * Wait as long as there's at least one element that matches the given
   * reference.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto wait_while = 6;</code>
   */
  boolean hasWaitWhile();
  /**
   * <pre>
   * Wait as long as there's at least one element that matches the given
   * reference.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto wait_while = 6;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getWaitWhile();

  /**
   * <pre>
   * Wait until at least one condition is met.
   * If, at the end of the timeout, no conditions are not met, the action
   * returns ELEMENT_RESOLUTION_FAILED.
   * </pre>
   *
   * <code>optional .autofill_assistant.WaitForDomProto.ElementConditions wait_for_any = 7;</code>
   */
  boolean hasWaitForAny();
  /**
   * <pre>
   * Wait until at least one condition is met.
   * If, at the end of the timeout, no conditions are not met, the action
   * returns ELEMENT_RESOLUTION_FAILED.
   * </pre>
   *
   * <code>optional .autofill_assistant.WaitForDomProto.ElementConditions wait_for_any = 7;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.WaitForDomProto.ElementConditions getWaitForAny();

  /**
   * <pre>
   * Wait until all conditions are met.
   * If, at the end of the timeout, not all condition are met, the action
   * returns ELEMENT_RESOLUTION_FAILED.
   * </pre>
   *
   * <code>optional .autofill_assistant.WaitForDomProto.ElementConditions wait_for_all = 8;</code>
   */
  boolean hasWaitForAll();
  /**
   * <pre>
   * Wait until all conditions are met.
   * If, at the end of the timeout, not all condition are met, the action
   * returns ELEMENT_RESOLUTION_FAILED.
   * </pre>
   *
   * <code>optional .autofill_assistant.WaitForDomProto.ElementConditions wait_for_all = 8;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.WaitForDomProto.ElementConditions getWaitForAll();

  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 3;</code>
   */
  boolean hasAllowInterrupt();
  /**
   * <pre>
   * If true, run scripts flagged with 'interrupt=true' as soon as their
   * preconditions match.
   * </pre>
   *
   * <code>optional bool allow_interrupt = 3;</code>
   */
  boolean getAllowInterrupt();

  public org.chromium.chrome.browser.autofill_assistant.proto.WaitForDomProto.WaitOnCase getWaitOnCase();
}
