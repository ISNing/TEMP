// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Fill a form with a credit card if there is one stored in client memory,
 * otherwise fail this action.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.UseCreditCardProto}
 */
public  final class UseCreditCardProto extends
    com.google.protobuf.GeneratedMessageLite<
        UseCreditCardProto, UseCreditCardProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.UseCreditCardProto)
    UseCreditCardProtoOrBuilder {
  private UseCreditCardProto() {
    prompt_ = "";
    requiredFields_ = emptyProtobufList();
  }
  public interface RequiredFieldOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.UseCreditCardProto.RequiredField)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    boolean hasCardField();
    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField getCardField();

    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    boolean hasElement();
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElement();

    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    boolean hasSimulateKeyPresses();
    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    boolean getSimulateKeyPresses();

    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    boolean hasDelayInMillisecond();
    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    int getDelayInMillisecond();

    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    boolean hasForced();
    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    boolean getForced();
  }
  /**
   * <pre>
   * Message used to indicate what form fields should be filled with what
   * information.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.UseCreditCardProto.RequiredField}
   */
  public  static final class RequiredField extends
      com.google.protobuf.GeneratedMessageLite<
          RequiredField, RequiredField.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.UseCreditCardProto.RequiredField)
      RequiredFieldOrBuilder {
    private RequiredField() {
      delayInMillisecond_ = 20;
    }
    /**
     * Protobuf enum {@code autofill_assistant.UseCreditCardProto.RequiredField.CardField}
     */
    public enum CardField
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>UNDEFINED = 0;</code>
       */
      UNDEFINED(0),
      /**
       * <code>CREDIT_CARD_VERIFICATION_CODE = 1;</code>
       */
      CREDIT_CARD_VERIFICATION_CODE(1),
      /**
       * <code>CREDIT_CARD_EXP_MONTH = 2;</code>
       */
      CREDIT_CARD_EXP_MONTH(2),
      /**
       * <code>CREDIT_CARD_EXP_2_DIGIT_YEAR = 3;</code>
       */
      CREDIT_CARD_EXP_2_DIGIT_YEAR(3),
      /**
       * <code>CREDIT_CARD_EXP_4_DIGIT_YEAR = 4;</code>
       */
      CREDIT_CARD_EXP_4_DIGIT_YEAR(4),
      /**
       * <code>CREDIT_CARD_CARD_HOLDER_NAME = 5;</code>
       */
      CREDIT_CARD_CARD_HOLDER_NAME(5),
      /**
       * <code>CREDIT_CARD_NUMBER = 6;</code>
       */
      CREDIT_CARD_NUMBER(6),
      /**
       * <code>CREDIT_CARD_EXP_MM_YY = 7;</code>
       */
      CREDIT_CARD_EXP_MM_YY(7),
      ;

      /**
       * <code>UNDEFINED = 0;</code>
       */
      public static final int UNDEFINED_VALUE = 0;
      /**
       * <code>CREDIT_CARD_VERIFICATION_CODE = 1;</code>
       */
      public static final int CREDIT_CARD_VERIFICATION_CODE_VALUE = 1;
      /**
       * <code>CREDIT_CARD_EXP_MONTH = 2;</code>
       */
      public static final int CREDIT_CARD_EXP_MONTH_VALUE = 2;
      /**
       * <code>CREDIT_CARD_EXP_2_DIGIT_YEAR = 3;</code>
       */
      public static final int CREDIT_CARD_EXP_2_DIGIT_YEAR_VALUE = 3;
      /**
       * <code>CREDIT_CARD_EXP_4_DIGIT_YEAR = 4;</code>
       */
      public static final int CREDIT_CARD_EXP_4_DIGIT_YEAR_VALUE = 4;
      /**
       * <code>CREDIT_CARD_CARD_HOLDER_NAME = 5;</code>
       */
      public static final int CREDIT_CARD_CARD_HOLDER_NAME_VALUE = 5;
      /**
       * <code>CREDIT_CARD_NUMBER = 6;</code>
       */
      public static final int CREDIT_CARD_NUMBER_VALUE = 6;
      /**
       * <code>CREDIT_CARD_EXP_MM_YY = 7;</code>
       */
      public static final int CREDIT_CARD_EXP_MM_YY_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CardField valueOf(int value) {
        return forNumber(value);
      }

      public static CardField forNumber(int value) {
        switch (value) {
          case 0: return UNDEFINED;
          case 1: return CREDIT_CARD_VERIFICATION_CODE;
          case 2: return CREDIT_CARD_EXP_MONTH;
          case 3: return CREDIT_CARD_EXP_2_DIGIT_YEAR;
          case 4: return CREDIT_CARD_EXP_4_DIGIT_YEAR;
          case 5: return CREDIT_CARD_CARD_HOLDER_NAME;
          case 6: return CREDIT_CARD_NUMBER;
          case 7: return CREDIT_CARD_EXP_MM_YY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CardField>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CardField> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CardField>() {
              public CardField findValueByNumber(int number) {
                return CardField.forNumber(number);
              }
            };

      private final int value;

      private CardField(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:autofill_assistant.UseCreditCardProto.RequiredField.CardField)
    }

    private int bitField0_;
    public static final int CARD_FIELD_FIELD_NUMBER = 1;
    private int cardField_;
    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    public boolean hasCardField() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField getCardField() {
      org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField result = org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField.forNumber(cardField_);
      return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField.UNDEFINED : result;
    }
    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    private void setCardField(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      cardField_ = value.getNumber();
    }
    /**
     * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
     */
    private void clearCardField() {
      bitField0_ = (bitField0_ & ~0x00000001);
      cardField_ = 0;
    }

    public static final int ELEMENT_FIELD_NUMBER = 2;
    private org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto element_;
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    public boolean hasElement() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElement() {
      return element_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.getDefaultInstance() : element_;
    }
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    private void setElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      if (value == null) {
        throw new NullPointerException();
      }
      element_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    private void setElement(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      element_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    private void mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      if (element_ != null &&
          element_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.getDefaultInstance()) {
        element_ =
          org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.newBuilder(element_).mergeFrom(value).buildPartial();
      } else {
        element_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
     */
    private void clearElement() {  element_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int SIMULATE_KEY_PRESSES_FIELD_NUMBER = 3;
    private boolean simulateKeyPresses_;
    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    public boolean hasSimulateKeyPresses() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    public boolean getSimulateKeyPresses() {
      return simulateKeyPresses_;
    }
    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    private void setSimulateKeyPresses(boolean value) {
      bitField0_ |= 0x00000004;
      simulateKeyPresses_ = value;
    }
    /**
     * <pre>
     * Whether we should simulate actual key presses when filling |element| with
     * its corresponding value.
     * </pre>
     *
     * <code>optional bool simulate_key_presses = 3;</code>
     */
    private void clearSimulateKeyPresses() {
      bitField0_ = (bitField0_ & ~0x00000004);
      simulateKeyPresses_ = false;
    }

    public static final int DELAY_IN_MILLISECOND_FIELD_NUMBER = 4;
    private int delayInMillisecond_;
    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    public boolean hasDelayInMillisecond() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    public int getDelayInMillisecond() {
      return delayInMillisecond_;
    }
    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    private void setDelayInMillisecond(int value) {
      bitField0_ |= 0x00000008;
      delayInMillisecond_ = value;
    }
    /**
     * <pre>
     * Delay between two key presses when simlulating.
     * </pre>
     *
     * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
     */
    private void clearDelayInMillisecond() {
      bitField0_ = (bitField0_ & ~0x00000008);
      delayInMillisecond_ = 20;
    }

    public static final int FORCED_FIELD_NUMBER = 5;
    private boolean forced_;
    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    public boolean hasForced() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    public boolean getForced() {
      return forced_;
    }
    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    private void setForced(boolean value) {
      bitField0_ |= 0x00000010;
      forced_ = value;
    }
    /**
     * <pre>
     * Fill in the fill even if it's non-empty. This is useful to work around
     * cases where the way autofill sets the field doesn't work on the website.
     * Usually used together with simulate_key_presses.
     * </pre>
     *
     * <code>optional bool forced = 5;</code>
     */
    private void clearForced() {
      bitField0_ = (bitField0_ & ~0x00000010);
      forced_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, cardField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getElement());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBool(3, simulateKeyPresses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, delayInMillisecond_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBool(5, forced_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, cardField_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getElement());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, simulateKeyPresses_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, delayInMillisecond_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, forced_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * Message used to indicate what form fields should be filled with what
     * information.
     * </pre>
     *
     * Protobuf type {@code autofill_assistant.UseCreditCardProto.RequiredField}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.UseCreditCardProto.RequiredField)
        org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredFieldOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
       */
      public boolean hasCardField() {
        return instance.hasCardField();
      }
      /**
       * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField getCardField() {
        return instance.getCardField();
      }
      /**
       * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
       */
      public Builder setCardField(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField value) {
        copyOnWrite();
        instance.setCardField(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.UseCreditCardProto.RequiredField.CardField card_field = 1;</code>
       */
      public Builder clearCardField() {
        copyOnWrite();
        instance.clearCardField();
        return this;
      }

      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public boolean hasElement() {
        return instance.hasElement();
      }
      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getElement() {
        return instance.getElement();
      }
      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public Builder setElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
        copyOnWrite();
        instance.setElement(value);
        return this;
        }
      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public Builder setElement(
          org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
        copyOnWrite();
        instance.setElement(builderForValue);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public Builder mergeElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
        copyOnWrite();
        instance.mergeElement(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.ElementReferenceProto element = 2;</code>
       */
      public Builder clearElement() {  copyOnWrite();
        instance.clearElement();
        return this;
      }

      /**
       * <pre>
       * Whether we should simulate actual key presses when filling |element| with
       * its corresponding value.
       * </pre>
       *
       * <code>optional bool simulate_key_presses = 3;</code>
       */
      public boolean hasSimulateKeyPresses() {
        return instance.hasSimulateKeyPresses();
      }
      /**
       * <pre>
       * Whether we should simulate actual key presses when filling |element| with
       * its corresponding value.
       * </pre>
       *
       * <code>optional bool simulate_key_presses = 3;</code>
       */
      public boolean getSimulateKeyPresses() {
        return instance.getSimulateKeyPresses();
      }
      /**
       * <pre>
       * Whether we should simulate actual key presses when filling |element| with
       * its corresponding value.
       * </pre>
       *
       * <code>optional bool simulate_key_presses = 3;</code>
       */
      public Builder setSimulateKeyPresses(boolean value) {
        copyOnWrite();
        instance.setSimulateKeyPresses(value);
        return this;
      }
      /**
       * <pre>
       * Whether we should simulate actual key presses when filling |element| with
       * its corresponding value.
       * </pre>
       *
       * <code>optional bool simulate_key_presses = 3;</code>
       */
      public Builder clearSimulateKeyPresses() {
        copyOnWrite();
        instance.clearSimulateKeyPresses();
        return this;
      }

      /**
       * <pre>
       * Delay between two key presses when simlulating.
       * </pre>
       *
       * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
       */
      public boolean hasDelayInMillisecond() {
        return instance.hasDelayInMillisecond();
      }
      /**
       * <pre>
       * Delay between two key presses when simlulating.
       * </pre>
       *
       * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
       */
      public int getDelayInMillisecond() {
        return instance.getDelayInMillisecond();
      }
      /**
       * <pre>
       * Delay between two key presses when simlulating.
       * </pre>
       *
       * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
       */
      public Builder setDelayInMillisecond(int value) {
        copyOnWrite();
        instance.setDelayInMillisecond(value);
        return this;
      }
      /**
       * <pre>
       * Delay between two key presses when simlulating.
       * </pre>
       *
       * <code>optional int32 delay_in_millisecond = 4 [default = 20];</code>
       */
      public Builder clearDelayInMillisecond() {
        copyOnWrite();
        instance.clearDelayInMillisecond();
        return this;
      }

      /**
       * <pre>
       * Fill in the fill even if it's non-empty. This is useful to work around
       * cases where the way autofill sets the field doesn't work on the website.
       * Usually used together with simulate_key_presses.
       * </pre>
       *
       * <code>optional bool forced = 5;</code>
       */
      public boolean hasForced() {
        return instance.hasForced();
      }
      /**
       * <pre>
       * Fill in the fill even if it's non-empty. This is useful to work around
       * cases where the way autofill sets the field doesn't work on the website.
       * Usually used together with simulate_key_presses.
       * </pre>
       *
       * <code>optional bool forced = 5;</code>
       */
      public boolean getForced() {
        return instance.getForced();
      }
      /**
       * <pre>
       * Fill in the fill even if it's non-empty. This is useful to work around
       * cases where the way autofill sets the field doesn't work on the website.
       * Usually used together with simulate_key_presses.
       * </pre>
       *
       * <code>optional bool forced = 5;</code>
       */
      public Builder setForced(boolean value) {
        copyOnWrite();
        instance.setForced(value);
        return this;
      }
      /**
       * <pre>
       * Fill in the fill even if it's non-empty. This is useful to work around
       * cases where the way autofill sets the field doesn't work on the website.
       * Usually used together with simulate_key_presses.
       * </pre>
       *
       * <code>optional bool forced = 5;</code>
       */
      public Builder clearForced() {
        copyOnWrite();
        instance.clearForced();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.UseCreditCardProto.RequiredField)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField other = (org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField) arg1;
          cardField_ = visitor.visitInt(hasCardField(), cardField_,
              other.hasCardField(), other.cardField_);
          element_ = visitor.visitMessage(element_, other.element_);
          simulateKeyPresses_ = visitor.visitBoolean(
              hasSimulateKeyPresses(), simulateKeyPresses_,
              other.hasSimulateKeyPresses(), other.simulateKeyPresses_);
          delayInMillisecond_ = visitor.visitInt(
              hasDelayInMillisecond(), delayInMillisecond_,
              other.hasDelayInMillisecond(), other.delayInMillisecond_);
          forced_ = visitor.visitBoolean(
              hasForced(), forced_,
              other.hasForced(), other.forced_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField value = org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.CardField.forNumber(rawValue);
                  if (value == null) {
                    super.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    cardField_ = rawValue;
                  }
                  break;
                }
                case 18: {
                  org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = element_.toBuilder();
                  }
                  element_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(element_);
                    element_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  simulateKeyPresses_ = input.readBool();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  delayInMillisecond_ = input.readInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  forced_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.UseCreditCardProto.RequiredField)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RequiredField();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<RequiredField> PARSER;

    public static com.google.protobuf.Parser<RequiredField> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int PROMPT_FIELD_NUMBER = 1;
  private java.lang.String prompt_;
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  public boolean hasPrompt() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  public java.lang.String getPrompt() {
    return prompt_;
  }
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  public com.google.protobuf.ByteString
      getPromptBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(prompt_);
  }
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  private void setPrompt(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    prompt_ = value;
  }
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  private void clearPrompt() {
    bitField0_ = (bitField0_ & ~0x00000001);
    prompt_ = getDefaultInstance().getPrompt();
  }
  /**
   * <pre>
   * An optional message to show to the user when asking to select a card.
   * TODO(crbug.com/806868): Make the prompt a required field.
   * </pre>
   *
   * <code>optional string prompt = 1;</code>
   */
  private void setPromptBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    prompt_ = value.toStringUtf8();
  }

  public static final int FORM_FIELD_ELEMENT_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto formFieldElement_;
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  public boolean hasFormFieldElement() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getFormFieldElement() {
    return formFieldElement_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.getDefaultInstance() : formFieldElement_;
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  private void setFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    formFieldElement_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  private void setFormFieldElement(
      org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
    formFieldElement_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  private void mergeFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
    if (formFieldElement_ != null &&
        formFieldElement_ != org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.getDefaultInstance()) {
      formFieldElement_ =
        org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.newBuilder(formFieldElement_).mergeFrom(value).buildPartial();
    } else {
      formFieldElement_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * A reference to the card number field in the form that should be filled.
   * </pre>
   *
   * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
   */
  private void clearFormFieldElement() {  formFieldElement_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public static final int REQUIRED_FIELDS_FIELD_NUMBER = 7;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField> requiredFields_;
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField> getRequiredFieldsList() {
    return requiredFields_;
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredFieldOrBuilder> 
      getRequiredFieldsOrBuilderList() {
    return requiredFields_;
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  public int getRequiredFieldsCount() {
    return requiredFields_.size();
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField getRequiredFields(int index) {
    return requiredFields_.get(index);
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredFieldOrBuilder getRequiredFieldsOrBuilder(
      int index) {
    return requiredFields_.get(index);
  }
  private void ensureRequiredFieldsIsMutable() {
    if (!requiredFields_.isModifiable()) {
      requiredFields_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(requiredFields_);
     }
  }

  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void setRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequiredFieldsIsMutable();
    requiredFields_.set(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void setRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
    ensureRequiredFieldsIsMutable();
    requiredFields_.set(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void addRequiredFields(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequiredFieldsIsMutable();
    requiredFields_.add(value);
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void addRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureRequiredFieldsIsMutable();
    requiredFields_.add(index, value);
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void addRequiredFields(
      org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
    ensureRequiredFieldsIsMutable();
    requiredFields_.add(builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void addRequiredFields(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
    ensureRequiredFieldsIsMutable();
    requiredFields_.add(index, builderForValue.build());
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void addAllRequiredFields(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField> values) {
    ensureRequiredFieldsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, requiredFields_);
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void clearRequiredFields() {
    requiredFields_ = emptyProtobufList();
  }
  /**
   * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
   */
  private void removeRequiredFields(int index) {
    ensureRequiredFieldsIsMutable();
    requiredFields_.remove(index);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getPrompt());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(3, getFormFieldElement());
    }
    for (int i = 0; i < requiredFields_.size(); i++) {
      output.writeMessage(7, requiredFields_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getPrompt());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getFormFieldElement());
    }
    for (int i = 0; i < requiredFields_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, requiredFields_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Fill a form with a credit card if there is one stored in client memory,
   * otherwise fail this action.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.UseCreditCardProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.UseCreditCardProto)
      org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public boolean hasPrompt() {
      return instance.hasPrompt();
    }
    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public java.lang.String getPrompt() {
      return instance.getPrompt();
    }
    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPromptBytes() {
      return instance.getPromptBytes();
    }
    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public Builder setPrompt(
        java.lang.String value) {
      copyOnWrite();
      instance.setPrompt(value);
      return this;
    }
    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public Builder clearPrompt() {
      copyOnWrite();
      instance.clearPrompt();
      return this;
    }
    /**
     * <pre>
     * An optional message to show to the user when asking to select a card.
     * TODO(crbug.com/806868): Make the prompt a required field.
     * </pre>
     *
     * <code>optional string prompt = 1;</code>
     */
    public Builder setPromptBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPromptBytes(value);
      return this;
    }

    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public boolean hasFormFieldElement() {
      return instance.hasFormFieldElement();
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto getFormFieldElement() {
      return instance.getFormFieldElement();
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public Builder setFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      copyOnWrite();
      instance.setFormFieldElement(value);
      return this;
      }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public Builder setFormFieldElement(
        org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder builderForValue) {
      copyOnWrite();
      instance.setFormFieldElement(builderForValue);
      return this;
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public Builder mergeFormFieldElement(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto value) {
      copyOnWrite();
      instance.mergeFormFieldElement(value);
      return this;
    }
    /**
     * <pre>
     * A reference to the card number field in the form that should be filled.
     * </pre>
     *
     * <code>optional .autofill_assistant.ElementReferenceProto form_field_element = 3;</code>
     */
    public Builder clearFormFieldElement() {  copyOnWrite();
      instance.clearFormFieldElement();
      return this;
    }

    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField> getRequiredFieldsList() {
      return java.util.Collections.unmodifiableList(
          instance.getRequiredFieldsList());
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public int getRequiredFieldsCount() {
      return instance.getRequiredFieldsCount();
    }/**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField getRequiredFields(int index) {
      return instance.getRequiredFields(index);
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder setRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
      copyOnWrite();
      instance.setRequiredFields(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder setRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
      copyOnWrite();
      instance.setRequiredFields(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder addRequiredFields(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
      copyOnWrite();
      instance.addRequiredFields(value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField value) {
      copyOnWrite();
      instance.addRequiredFields(index, value);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
      copyOnWrite();
      instance.addRequiredFields(builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder addRequiredFields(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.Builder builderForValue) {
      copyOnWrite();
      instance.addRequiredFields(index, builderForValue);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder addAllRequiredFields(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField> values) {
      copyOnWrite();
      instance.addAllRequiredFields(values);
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder clearRequiredFields() {
      copyOnWrite();
      instance.clearRequiredFields();
      return this;
    }
    /**
     * <code>repeated .autofill_assistant.UseCreditCardProto.RequiredField required_fields = 7;</code>
     */
    public Builder removeRequiredFields(int index) {
      copyOnWrite();
      instance.removeRequiredFields(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.UseCreditCardProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        requiredFields_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto other = (org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto) arg1;
        prompt_ = visitor.visitString(
            hasPrompt(), prompt_,
            other.hasPrompt(), other.prompt_);
        formFieldElement_ = visitor.visitMessage(formFieldElement_, other.formFieldElement_);
        requiredFields_= visitor.visitList(requiredFields_, other.requiredFields_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                prompt_ = s;
                break;
              }
              case 26: {
                org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = formFieldElement_.toBuilder();
                }
                formFieldElement_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.ElementReferenceProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(formFieldElement_);
                  formFieldElement_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
              case 58: {
                if (!requiredFields_.isModifiable()) {
                  requiredFields_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(requiredFields_);
                }
                requiredFields_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.RequiredField.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.UseCreditCardProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new UseCreditCardProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.UseCreditCardProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<UseCreditCardProto> PARSER;

  public static com.google.protobuf.Parser<UseCreditCardProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

