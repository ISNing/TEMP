// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.FormInputProto}
 */
public  final class FormInputProto extends
    com.google.protobuf.GeneratedMessageLite<
        FormInputProto, FormInputProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.FormInputProto)
    FormInputProtoOrBuilder {
  private FormInputProto() {
  }
  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.FormInputProto.Result)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    boolean hasCounter();
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result getCounter();

    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    boolean hasSelection();
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result getSelection();

    public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.InputTypeCase getInputTypeCase();
  }
  /**
   * Protobuf type {@code autofill_assistant.FormInputProto.Result}
   */
  public  static final class Result extends
      com.google.protobuf.GeneratedMessageLite<
          Result, Result.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.FormInputProto.Result)
      ResultOrBuilder {
    private Result() {
    }
    private int bitField0_;
    private int inputTypeCase_ = 0;
    private java.lang.Object inputType_;
    public enum InputTypeCase
        implements com.google.protobuf.Internal.EnumLite {
      COUNTER(1),
      SELECTION(2),
      INPUTTYPE_NOT_SET(0);
      private final int value;
      private InputTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static InputTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static InputTypeCase forNumber(int value) {
        switch (value) {
          case 1: return COUNTER;
          case 2: return SELECTION;
          case 0: return INPUTTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public InputTypeCase
    getInputTypeCase() {
      return InputTypeCase.forNumber(
          inputTypeCase_);
    }

    private void clearInputType() {
      inputTypeCase_ = 0;
      inputType_ = null;
    }

    public static final int COUNTER_FIELD_NUMBER = 1;
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    public boolean hasCounter() {
      return inputTypeCase_ == 1;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result getCounter() {
      if (inputTypeCase_ == 1) {
         return (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_;
      }
      return org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.getDefaultInstance();
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    private void setCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      inputType_ = value;
      inputTypeCase_ = 1;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    private void setCounter(
        org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.Builder builderForValue) {
      inputType_ = builderForValue.build();
      inputTypeCase_ = 1;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    private void mergeCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result value) {
      if (inputTypeCase_ == 1 &&
          inputType_ != org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.getDefaultInstance()) {
        inputType_ = org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_)
            .mergeFrom(value).buildPartial();
      } else {
        inputType_ = value;
      }
      inputTypeCase_ = 1;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
     */
    private void clearCounter() {
      if (inputTypeCase_ == 1) {
        inputTypeCase_ = 0;
        inputType_ = null;
      }
    }

    public static final int SELECTION_FIELD_NUMBER = 2;
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    public boolean hasSelection() {
      return inputTypeCase_ == 2;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result getSelection() {
      if (inputTypeCase_ == 2) {
         return (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_;
      }
      return org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.getDefaultInstance();
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    private void setSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      inputType_ = value;
      inputTypeCase_ = 2;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    private void setSelection(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.Builder builderForValue) {
      inputType_ = builderForValue.build();
      inputTypeCase_ = 2;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    private void mergeSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result value) {
      if (inputTypeCase_ == 2 &&
          inputType_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.getDefaultInstance()) {
        inputType_ = org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_)
            .mergeFrom(value).buildPartial();
      } else {
        inputType_ = value;
      }
      inputTypeCase_ = 2;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
     */
    private void clearSelection() {
      if (inputTypeCase_ == 2) {
        inputTypeCase_ = 0;
        inputType_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (inputTypeCase_ == 1) {
        output.writeMessage(1, (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_);
      }
      if (inputTypeCase_ == 2) {
        output.writeMessage(2, (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (inputTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_);
      }
      if (inputTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code autofill_assistant.FormInputProto.Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.FormInputProto.Result)
        org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.ResultOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public InputTypeCase
          getInputTypeCase() {
        return instance.getInputTypeCase();
      }

      public Builder clearInputType() {
        copyOnWrite();
        instance.clearInputType();
        return this;
      }


      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public boolean hasCounter() {
        return instance.hasCounter();
      }
      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result getCounter() {
        return instance.getCounter();
      }
      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public Builder setCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result value) {
        copyOnWrite();
        instance.setCounter(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public Builder setCounter(
          org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.Builder builderForValue) {
        copyOnWrite();
        instance.setCounter(builderForValue);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public Builder mergeCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result value) {
        copyOnWrite();
        instance.mergeCounter(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.CounterInputProto.Result counter = 1;</code>
       */
      public Builder clearCounter() {
        copyOnWrite();
        instance.clearCounter();
        return this;
      }

      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public boolean hasSelection() {
        return instance.hasSelection();
      }
      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result getSelection() {
        return instance.getSelection();
      }
      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public Builder setSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result value) {
        copyOnWrite();
        instance.setSelection(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public Builder setSelection(
          org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.Builder builderForValue) {
        copyOnWrite();
        instance.setSelection(builderForValue);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public Builder mergeSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result value) {
        copyOnWrite();
        instance.mergeSelection(value);
        return this;
      }
      /**
       * <code>optional .autofill_assistant.SelectionInputProto.Result selection = 2;</code>
       */
      public Builder clearSelection() {
        copyOnWrite();
        instance.clearSelection();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.FormInputProto.Result)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result other = (org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result) arg1;
          switch (other.getInputTypeCase()) {
            case COUNTER: {
              inputType_ = visitor.visitOneofMessage(
                  inputTypeCase_ == 1,
                  inputType_,
                  other.inputType_);
              break;
            }
            case SELECTION: {
              inputType_ = visitor.visitOneofMessage(
                  inputTypeCase_ == 2,
                  inputType_,
                  other.inputType_);
              break;
            }
            case INPUTTYPE_NOT_SET: {
              visitor.visitOneofNotSet(inputTypeCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.inputTypeCase_ != 0) {
              inputTypeCase_ = other.inputTypeCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.Builder subBuilder = null;
                  if (inputTypeCase_ == 1) {
                    subBuilder = ((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_).toBuilder();
                  }
                  inputType_ =
                       input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Result) inputType_);
                    inputType_ = subBuilder.buildPartial();
                  }
                  inputTypeCase_ = 1;
                  break;
                }
                case 18: {
                  org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.Builder subBuilder = null;
                  if (inputTypeCase_ == 2) {
                    subBuilder = ((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_).toBuilder();
                  }
                  inputType_ =
                       input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Result) inputType_);
                    inputType_ = subBuilder.buildPartial();
                  }
                  inputTypeCase_ = 2;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.FormInputProto.Result)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Result();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Result> PARSER;

    public static com.google.protobuf.Parser<Result> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  private int inputTypeCase_ = 0;
  private java.lang.Object inputType_;
  public enum InputTypeCase
      implements com.google.protobuf.Internal.EnumLite {
    COUNTER(1),
    SELECTION(2),
    INPUTTYPE_NOT_SET(0);
    private final int value;
    private InputTypeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InputTypeCase valueOf(int value) {
      return forNumber(value);
    }

    public static InputTypeCase forNumber(int value) {
      switch (value) {
        case 1: return COUNTER;
        case 2: return SELECTION;
        case 0: return INPUTTYPE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public InputTypeCase
  getInputTypeCase() {
    return InputTypeCase.forNumber(
        inputTypeCase_);
  }

  private void clearInputType() {
    inputTypeCase_ = 0;
    inputType_ = null;
  }

  public static final int COUNTER_FIELD_NUMBER = 1;
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  public boolean hasCounter() {
    return inputTypeCase_ == 1;
  }
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto getCounter() {
    if (inputTypeCase_ == 1) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.getDefaultInstance();
  }
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  private void setCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    inputType_ = value;
    inputTypeCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  private void setCounter(
      org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Builder builderForValue) {
    inputType_ = builderForValue.build();
    inputTypeCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  private void mergeCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto value) {
    if (inputTypeCase_ == 1 &&
        inputType_ != org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.getDefaultInstance()) {
      inputType_ = org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_)
          .mergeFrom(value).buildPartial();
    } else {
      inputType_ = value;
    }
    inputTypeCase_ = 1;
  }
  /**
   * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
   */
  private void clearCounter() {
    if (inputTypeCase_ == 1) {
      inputTypeCase_ = 0;
      inputType_ = null;
    }
  }

  public static final int SELECTION_FIELD_NUMBER = 2;
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  public boolean hasSelection() {
    return inputTypeCase_ == 2;
  }
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto getSelection() {
    if (inputTypeCase_ == 2) {
       return (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_;
    }
    return org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.getDefaultInstance();
  }
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  private void setSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    inputType_ = value;
    inputTypeCase_ = 2;
  }
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  private void setSelection(
      org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Builder builderForValue) {
    inputType_ = builderForValue.build();
    inputTypeCase_ = 2;
  }
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  private void mergeSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto value) {
    if (inputTypeCase_ == 2 &&
        inputType_ != org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.getDefaultInstance()) {
      inputType_ = org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.newBuilder((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_)
          .mergeFrom(value).buildPartial();
    } else {
      inputType_ = value;
    }
    inputTypeCase_ = 2;
  }
  /**
   * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
   */
  private void clearSelection() {
    if (inputTypeCase_ == 2) {
      inputTypeCase_ = 0;
      inputType_ = null;
    }
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (inputTypeCase_ == 1) {
      output.writeMessage(1, (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_);
    }
    if (inputTypeCase_ == 2) {
      output.writeMessage(2, (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (inputTypeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_);
    }
    if (inputTypeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.FormInputProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.FormInputProto)
      org.chromium.chrome.browser.autofill_assistant.proto.FormInputProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public InputTypeCase
        getInputTypeCase() {
      return instance.getInputTypeCase();
    }

    public Builder clearInputType() {
      copyOnWrite();
      instance.clearInputType();
      return this;
    }


    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public boolean hasCounter() {
      return instance.hasCounter();
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto getCounter() {
      return instance.getCounter();
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public Builder setCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto value) {
      copyOnWrite();
      instance.setCounter(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public Builder setCounter(
        org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Builder builderForValue) {
      copyOnWrite();
      instance.setCounter(builderForValue);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public Builder mergeCounter(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto value) {
      copyOnWrite();
      instance.mergeCounter(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.CounterInputProto counter = 1;</code>
     */
    public Builder clearCounter() {
      copyOnWrite();
      instance.clearCounter();
      return this;
    }

    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public boolean hasSelection() {
      return instance.hasSelection();
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto getSelection() {
      return instance.getSelection();
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public Builder setSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto value) {
      copyOnWrite();
      instance.setSelection(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public Builder setSelection(
        org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Builder builderForValue) {
      copyOnWrite();
      instance.setSelection(builderForValue);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public Builder mergeSelection(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto value) {
      copyOnWrite();
      instance.mergeSelection(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.SelectionInputProto selection = 2;</code>
     */
    public Builder clearSelection() {
      copyOnWrite();
      instance.clearSelection();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.FormInputProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto other = (org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto) arg1;
        switch (other.getInputTypeCase()) {
          case COUNTER: {
            inputType_ = visitor.visitOneofMessage(
                inputTypeCase_ == 1,
                inputType_,
                other.inputType_);
            break;
          }
          case SELECTION: {
            inputType_ = visitor.visitOneofMessage(
                inputTypeCase_ == 2,
                inputType_,
                other.inputType_);
            break;
          }
          case INPUTTYPE_NOT_SET: {
            visitor.visitOneofNotSet(inputTypeCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.inputTypeCase_ != 0) {
            inputTypeCase_ = other.inputTypeCase_;
          }
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.Builder subBuilder = null;
                if (inputTypeCase_ == 1) {
                  subBuilder = ((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_).toBuilder();
                }
                inputType_ =
                     input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.chromium.chrome.browser.autofill_assistant.proto.CounterInputProto) inputType_);
                  inputType_ = subBuilder.buildPartial();
                }
                inputTypeCase_ = 1;
                break;
              }
              case 18: {
                org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.Builder subBuilder = null;
                if (inputTypeCase_ == 2) {
                  subBuilder = ((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_).toBuilder();
                }
                inputType_ =
                     input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.chromium.chrome.browser.autofill_assistant.proto.SelectionInputProto) inputType_);
                  inputType_ = subBuilder.buildPartial();
                }
                inputTypeCase_ = 2;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.FormInputProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new FormInputProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FormInputProto> PARSER;

  public static com.google.protobuf.Parser<FormInputProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

