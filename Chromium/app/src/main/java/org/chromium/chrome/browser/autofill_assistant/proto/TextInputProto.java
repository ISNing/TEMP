// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * A single text input.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.TextInputProto}
 */
public  final class TextInputProto extends
    com.google.protobuf.GeneratedMessageLite<
        TextInputProto, TextInputProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.TextInputProto)
    TextInputProtoOrBuilder {
  private TextInputProto() {
    hint_ = "";
    clientMemoryKey_ = "";
    value_ = "";
  }
  /**
   * Protobuf enum {@code autofill_assistant.TextInputProto.InputType}
   */
  public enum InputType
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <code>UNDEFINED = 0;</code>
     */
    UNDEFINED(0),
    /**
     * <pre>
     * Regular text, no special formatting rules.
     * </pre>
     *
     * <code>INPUT_TEXT = 1;</code>
     */
    INPUT_TEXT(1),
    /**
     * <pre>
     * An alphanumeric input, e.g. postal code or discount code.
     * </pre>
     *
     * <code>INPUT_ALPHANUMERIC = 2;</code>
     */
    INPUT_ALPHANUMERIC(2),
    ;

    /**
     * <code>UNDEFINED = 0;</code>
     */
    public static final int UNDEFINED_VALUE = 0;
    /**
     * <pre>
     * Regular text, no special formatting rules.
     * </pre>
     *
     * <code>INPUT_TEXT = 1;</code>
     */
    public static final int INPUT_TEXT_VALUE = 1;
    /**
     * <pre>
     * An alphanumeric input, e.g. postal code or discount code.
     * </pre>
     *
     * <code>INPUT_ALPHANUMERIC = 2;</code>
     */
    public static final int INPUT_ALPHANUMERIC_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static InputType valueOf(int value) {
      return forNumber(value);
    }

    public static InputType forNumber(int value) {
      switch (value) {
        case 0: return UNDEFINED;
        case 1: return INPUT_TEXT;
        case 2: return INPUT_ALPHANUMERIC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<InputType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        InputType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<InputType>() {
            public InputType findValueByNumber(int number) {
              return InputType.forNumber(number);
            }
          };

    private final int value;

    private InputType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:autofill_assistant.TextInputProto.InputType)
  }

  private int bitField0_;
  public static final int HINT_FIELD_NUMBER = 1;
  private java.lang.String hint_;
  /**
   * <code>optional string hint = 1;</code>
   */
  public boolean hasHint() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>optional string hint = 1;</code>
   */
  public java.lang.String getHint() {
    return hint_;
  }
  /**
   * <code>optional string hint = 1;</code>
   */
  public com.google.protobuf.ByteString
      getHintBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(hint_);
  }
  /**
   * <code>optional string hint = 1;</code>
   */
  private void setHint(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    hint_ = value;
  }
  /**
   * <code>optional string hint = 1;</code>
   */
  private void clearHint() {
    bitField0_ = (bitField0_ & ~0x00000001);
    hint_ = getDefaultInstance().getHint();
  }
  /**
   * <code>optional string hint = 1;</code>
   */
  private void setHintBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    hint_ = value.toStringUtf8();
  }

  public static final int INPUT_TYPE_FIELD_NUMBER = 2;
  private int inputType_;
  /**
   * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
   */
  public boolean hasInputType() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType getInputType() {
    org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType result = org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType.forNumber(inputType_);
    return result == null ? org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType.UNDEFINED : result;
  }
  /**
   * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
   */
  private void setInputType(org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType value) {
    if (value == null) {
      throw new NullPointerException();
    }
    bitField0_ |= 0x00000002;
    inputType_ = value.getNumber();
  }
  /**
   * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
   */
  private void clearInputType() {
    bitField0_ = (bitField0_ & ~0x00000002);
    inputType_ = 0;
  }

  public static final int CLIENT_MEMORY_KEY_FIELD_NUMBER = 3;
  private java.lang.String clientMemoryKey_;
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  public boolean hasClientMemoryKey() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  public java.lang.String getClientMemoryKey() {
    return clientMemoryKey_;
  }
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  public com.google.protobuf.ByteString
      getClientMemoryKeyBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(clientMemoryKey_);
  }
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  private void setClientMemoryKey(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    clientMemoryKey_ = value;
  }
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  private void clearClientMemoryKey() {
    bitField0_ = (bitField0_ & ~0x00000004);
    clientMemoryKey_ = getDefaultInstance().getClientMemoryKey();
  }
  /**
   * <pre>
   * The client memory key to store the result in.
   * </pre>
   *
   * <code>optional string client_memory_key = 3;</code>
   */
  private void setClientMemoryKeyBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
    clientMemoryKey_ = value.toStringUtf8();
  }

  public static final int VALUE_FIELD_NUMBER = 4;
  private java.lang.String value_;
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  public boolean hasValue() {
    return ((bitField0_ & 0x00000008) == 0x00000008);
  }
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  public java.lang.String getValue() {
    return value_;
  }
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  public com.google.protobuf.ByteString
      getValueBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(value_);
  }
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  private void setValue(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    value_ = value;
  }
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  private void clearValue() {
    bitField0_ = (bitField0_ & ~0x00000008);
    value_ = getDefaultInstance().getValue();
  }
  /**
   * <pre>
   * The initial value of the text input.
   * </pre>
   *
   * <code>optional string value = 4;</code>
   */
  private void setValueBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
    value_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(1, getHint());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeEnum(2, inputType_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeString(3, getClientMemoryKey());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      output.writeString(4, getValue());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getHint());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, inputType_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getClientMemoryKey());
    }
    if (((bitField0_ & 0x00000008) == 0x00000008)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(4, getValue());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * A single text input.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.TextInputProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.TextInputProto)
      org.chromium.chrome.browser.autofill_assistant.proto.TextInputProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional string hint = 1;</code>
     */
    public boolean hasHint() {
      return instance.hasHint();
    }
    /**
     * <code>optional string hint = 1;</code>
     */
    public java.lang.String getHint() {
      return instance.getHint();
    }
    /**
     * <code>optional string hint = 1;</code>
     */
    public com.google.protobuf.ByteString
        getHintBytes() {
      return instance.getHintBytes();
    }
    /**
     * <code>optional string hint = 1;</code>
     */
    public Builder setHint(
        java.lang.String value) {
      copyOnWrite();
      instance.setHint(value);
      return this;
    }
    /**
     * <code>optional string hint = 1;</code>
     */
    public Builder clearHint() {
      copyOnWrite();
      instance.clearHint();
      return this;
    }
    /**
     * <code>optional string hint = 1;</code>
     */
    public Builder setHintBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setHintBytes(value);
      return this;
    }

    /**
     * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
     */
    public boolean hasInputType() {
      return instance.hasInputType();
    }
    /**
     * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType getInputType() {
      return instance.getInputType();
    }
    /**
     * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
     */
    public Builder setInputType(org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType value) {
      copyOnWrite();
      instance.setInputType(value);
      return this;
    }
    /**
     * <code>optional .autofill_assistant.TextInputProto.InputType input_type = 2;</code>
     */
    public Builder clearInputType() {
      copyOnWrite();
      instance.clearInputType();
      return this;
    }

    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public boolean hasClientMemoryKey() {
      return instance.hasClientMemoryKey();
    }
    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public java.lang.String getClientMemoryKey() {
      return instance.getClientMemoryKey();
    }
    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public com.google.protobuf.ByteString
        getClientMemoryKeyBytes() {
      return instance.getClientMemoryKeyBytes();
    }
    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public Builder setClientMemoryKey(
        java.lang.String value) {
      copyOnWrite();
      instance.setClientMemoryKey(value);
      return this;
    }
    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public Builder clearClientMemoryKey() {
      copyOnWrite();
      instance.clearClientMemoryKey();
      return this;
    }
    /**
     * <pre>
     * The client memory key to store the result in.
     * </pre>
     *
     * <code>optional string client_memory_key = 3;</code>
     */
    public Builder setClientMemoryKeyBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setClientMemoryKeyBytes(value);
      return this;
    }

    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public boolean hasValue() {
      return instance.hasValue();
    }
    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public java.lang.String getValue() {
      return instance.getValue();
    }
    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      return instance.getValueBytes();
    }
    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public Builder setValue(
        java.lang.String value) {
      copyOnWrite();
      instance.setValue(value);
      return this;
    }
    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public Builder clearValue() {
      copyOnWrite();
      instance.clearValue();
      return this;
    }
    /**
     * <pre>
     * The initial value of the text input.
     * </pre>
     *
     * <code>optional string value = 4;</code>
     */
    public Builder setValueBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setValueBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.TextInputProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto other = (org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto) arg1;
        hint_ = visitor.visitString(
            hasHint(), hint_,
            other.hasHint(), other.hint_);
        inputType_ = visitor.visitInt(hasInputType(), inputType_,
            other.hasInputType(), other.inputType_);
        clientMemoryKey_ = visitor.visitString(
            hasClientMemoryKey(), clientMemoryKey_,
            other.hasClientMemoryKey(), other.clientMemoryKey_);
        value_ = visitor.visitString(
            hasValue(), value_,
            other.hasValue(), other.value_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                hint_ = s;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();
                org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType value = org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.InputType.forNumber(rawValue);
                if (value == null) {
                  super.mergeVarintField(2, rawValue);
                } else {
                  bitField0_ |= 0x00000002;
                  inputType_ = rawValue;
                }
                break;
              }
              case 26: {
                String s = input.readString();
                bitField0_ |= 0x00000004;
                clientMemoryKey_ = s;
                break;
              }
              case 34: {
                String s = input.readString();
                bitField0_ |= 0x00000008;
                value_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.TextInputProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new TextInputProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.TextInputProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<TextInputProto> PARSER;

  public static com.google.protobuf.Parser<TextInputProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

