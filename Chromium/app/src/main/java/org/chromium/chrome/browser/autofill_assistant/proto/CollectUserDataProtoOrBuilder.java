// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

public interface CollectUserDataProtoOrBuilder extends
    // @@protoc_insertion_point(interface_extends:autofill_assistant.CollectUserDataProto)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <code>optional string prompt = 1;</code>
   */
  boolean hasPrompt();
  /**
   * <code>optional string prompt = 1;</code>
   */
  java.lang.String getPrompt();
  /**
   * <code>optional string prompt = 1;</code>
   */
  com.google.protobuf.ByteString
      getPromptBytes();

  /**
   * <pre>
   * NOTE: The action does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  boolean hasBillingAddressName();
  /**
   * <pre>
   * NOTE: The action does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  java.lang.String getBillingAddressName();
  /**
   * <pre>
   * NOTE: The action does not ask separately for billing address.
   * The billing address is associated with the credit card that was picked.
   * </pre>
   *
   * <code>optional string billing_address_name = 2;</code>
   */
  com.google.protobuf.ByteString
      getBillingAddressNameBytes();

  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  boolean hasShippingAddressName();
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  java.lang.String getShippingAddressName();
  /**
   * <pre>
   * If present will save the shipping address inside the memory under the
   * specified name. If empty we won't ask for the shipping address. Data saved
   * under this name can be reused by UseAddressAction.
   * </pre>
   *
   * <code>optional string shipping_address_name = 3;</code>
   */
  com.google.protobuf.ByteString
      getShippingAddressNameBytes();

  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool request_payment_method = 4;</code>
   */
  boolean hasRequestPaymentMethod();
  /**
   * <pre>
   * When 'true' will ask for the credit card.
   * </pre>
   *
   * <code>optional bool request_payment_method = 4;</code>
   */
  boolean getRequestPaymentMethod();

  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  java.util.List<String>
      getSupportedBasicCardNetworksList();
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  int getSupportedBasicCardNetworksCount();
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  java.lang.String getSupportedBasicCardNetworks(int index);
  /**
   * <pre>
   * If non-empty, the UI will filter the available basic-card networks
   * accordingly (e.g., only `visa' and `mastercard').
   * </pre>
   *
   * <code>repeated string supported_basic_card_networks = 6;</code>
   */
  com.google.protobuf.ByteString
      getSupportedBasicCardNetworksBytes(int index);

  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  boolean hasContactDetails();
  /**
   * <pre>
   * Contact details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.ContactDetailsProto contact_details = 5;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.ContactDetailsProto getContactDetails();

  /**
   * <pre>
   * Override for the text of the confirm button.
   * </pre>
   *
   * <code>optional string confirm_button_text = 7;</code>
   */
  boolean hasConfirmButtonText();
  /**
   * <pre>
   * Override for the text of the confirm button.
   * </pre>
   *
   * <code>optional string confirm_button_text = 7;</code>
   */
  java.lang.String getConfirmButtonText();
  /**
   * <pre>
   * Override for the text of the confirm button.
   * </pre>
   *
   * <code>optional string confirm_button_text = 7;</code>
   */
  com.google.protobuf.ByteString
      getConfirmButtonTextBytes();

  /**
   * <pre>
   * The initial state of the terms &amp; conditions choice.
   * </pre>
   *
   * <code>optional .autofill_assistant.CollectUserDataProto.TermsAndConditionsState terms_and_conditions_state = 8;</code>
   */
  boolean hasTermsAndConditionsState();
  /**
   * <pre>
   * The initial state of the terms &amp; conditions choice.
   * </pre>
   *
   * <code>optional .autofill_assistant.CollectUserDataProto.TermsAndConditionsState terms_and_conditions_state = 8;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.CollectUserDataProto.TermsAndConditionsState getTermsAndConditionsState();

  /**
   * <pre>
   * When 'false', hide the terms and conditions box in the UI.
   * </pre>
   *
   * <code>optional bool request_terms_and_conditions = 9 [default = true];</code>
   */
  boolean hasRequestTermsAndConditions();
  /**
   * <pre>
   * When 'false', hide the terms and conditions box in the UI.
   * </pre>
   *
   * <code>optional bool request_terms_and_conditions = 9 [default = true];</code>
   */
  boolean getRequestTermsAndConditions();

  /**
   * <pre>
   * Whether the terms and conditions should be displayed as a single checkbox
   * with |accept_terms_and_conditions_text| as text. If false, the accept terms
   * will be displayed as a radio button next to an additional "Read and agree
   * later on domain.com" choice.
   * </pre>
   *
   * <code>optional bool show_terms_as_checkbox = 12;</code>
   */
  boolean hasShowTermsAsCheckbox();
  /**
   * <pre>
   * Whether the terms and conditions should be displayed as a single checkbox
   * with |accept_terms_and_conditions_text| as text. If false, the accept terms
   * will be displayed as a radio button next to an additional "Read and agree
   * later on domain.com" choice.
   * </pre>
   *
   * <code>optional bool show_terms_as_checkbox = 12;</code>
   */
  boolean getShowTermsAsCheckbox();

  /**
   * <pre>
   * The text for the terms and conditions "I accept..." choice. The text is
   * formatted such that '&lt;b&gt;text&lt;/b&gt;' will be bold and '&lt;link0&gt;clickable
   * link&lt;/link0&gt;', '&lt;link1&gt;other link&lt;/link1&gt;', etc will be clickable links
   * that will finish this action and return the clicked link in the action
   * result.
   * </pre>
   *
   * <code>optional string accept_terms_and_conditions_text = 13;</code>
   */
  boolean hasAcceptTermsAndConditionsText();
  /**
   * <pre>
   * The text for the terms and conditions "I accept..." choice. The text is
   * formatted such that '&lt;b&gt;text&lt;/b&gt;' will be bold and '&lt;link0&gt;clickable
   * link&lt;/link0&gt;', '&lt;link1&gt;other link&lt;/link1&gt;', etc will be clickable links
   * that will finish this action and return the clicked link in the action
   * result.
   * </pre>
   *
   * <code>optional string accept_terms_and_conditions_text = 13;</code>
   */
  java.lang.String getAcceptTermsAndConditionsText();
  /**
   * <pre>
   * The text for the terms and conditions "I accept..." choice. The text is
   * formatted such that '&lt;b&gt;text&lt;/b&gt;' will be bold and '&lt;link0&gt;clickable
   * link&lt;/link0&gt;', '&lt;link1&gt;other link&lt;/link1&gt;', etc will be clickable links
   * that will finish this action and return the clicked link in the action
   * result.
   * </pre>
   *
   * <code>optional string accept_terms_and_conditions_text = 13;</code>
   */
  com.google.protobuf.ByteString
      getAcceptTermsAndConditionsTextBytes();

  /**
   * <pre>
   * Message that indicates that the user wants to review the terms and
   * conditions of a 3rd party's domain, e.g., 'example.com'.
   * </pre>
   *
   * <code>optional string terms_require_review_text = 20;</code>
   */
  boolean hasTermsRequireReviewText();
  /**
   * <pre>
   * Message that indicates that the user wants to review the terms and
   * conditions of a 3rd party's domain, e.g., 'example.com'.
   * </pre>
   *
   * <code>optional string terms_require_review_text = 20;</code>
   */
  java.lang.String getTermsRequireReviewText();
  /**
   * <pre>
   * Message that indicates that the user wants to review the terms and
   * conditions of a 3rd party's domain, e.g., 'example.com'.
   * </pre>
   *
   * <code>optional string terms_require_review_text = 20;</code>
   */
  com.google.protobuf.ByteString
      getTermsRequireReviewTextBytes();

  /**
   * <pre>
   * Privacy notice telling users that autofill assistant will send personal
   * data to a third party’s website.
   * </pre>
   *
   * <code>optional string privacy_notice_text = 21;</code>
   */
  boolean hasPrivacyNoticeText();
  /**
   * <pre>
   * Privacy notice telling users that autofill assistant will send personal
   * data to a third party’s website.
   * </pre>
   *
   * <code>optional string privacy_notice_text = 21;</code>
   */
  java.lang.String getPrivacyNoticeText();
  /**
   * <pre>
   * Privacy notice telling users that autofill assistant will send personal
   * data to a third party’s website.
   * </pre>
   *
   * <code>optional string privacy_notice_text = 21;</code>
   */
  com.google.protobuf.ByteString
      getPrivacyNoticeTextBytes();

  /**
   * <pre>
   * Optionally allows confiriming through the given direct actions.
   * </pre>
   *
   * <code>optional .autofill_assistant.DirectActionProto confirm_direct_action = 10;</code>
   */
  boolean hasConfirmDirectAction();
  /**
   * <pre>
   * Optionally allows confiriming through the given direct actions.
   * </pre>
   *
   * <code>optional .autofill_assistant.DirectActionProto confirm_direct_action = 10;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.DirectActionProto getConfirmDirectAction();

  /**
   * <pre>
   * Additional actions available to the user. This can be used for instance to
   * display a "Show terms" button that will navigate the user to the terms and
   * conditions page when clicked.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserActionProto additional_actions = 11;</code>
   */
  java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UserActionProto> 
      getAdditionalActionsList();
  /**
   * <pre>
   * Additional actions available to the user. This can be used for instance to
   * display a "Show terms" button that will navigate the user to the terms and
   * conditions page when clicked.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserActionProto additional_actions = 11;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.UserActionProto getAdditionalActions(int index);
  /**
   * <pre>
   * Additional actions available to the user. This can be used for instance to
   * display a "Show terms" button that will navigate the user to the terms and
   * conditions page when clicked.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserActionProto additional_actions = 11;</code>
   */
  int getAdditionalActionsCount();

  /**
   * <pre>
   * Optionally requests a payment method with a billing address that has a
   * postcode value.
   * </pre>
   *
   * <code>optional bool require_billing_postal_code = 14;</code>
   */
  boolean hasRequireBillingPostalCode();
  /**
   * <pre>
   * Optionally requests a payment method with a billing address that has a
   * postcode value.
   * </pre>
   *
   * <code>optional bool require_billing_postal_code = 14;</code>
   */
  boolean getRequireBillingPostalCode();

  /**
   * <pre>
   * The error message to display when the billing address is missing the
   * postal code. This field is mandatory if |require_postal_code| is true.
   * </pre>
   *
   * <code>optional string billing_postal_code_missing_text = 15;</code>
   */
  boolean hasBillingPostalCodeMissingText();
  /**
   * <pre>
   * The error message to display when the billing address is missing the
   * postal code. This field is mandatory if |require_postal_code| is true.
   * </pre>
   *
   * <code>optional string billing_postal_code_missing_text = 15;</code>
   */
  java.lang.String getBillingPostalCodeMissingText();
  /**
   * <pre>
   * The error message to display when the billing address is missing the
   * postal code. This field is mandatory if |require_postal_code| is true.
   * </pre>
   *
   * <code>optional string billing_postal_code_missing_text = 15;</code>
   */
  com.google.protobuf.ByteString
      getBillingPostalCodeMissingTextBytes();

  /**
   * <pre>
   * The error message to display when the selected credit card is expired.
   * </pre>
   *
   * <code>optional string credit_card_expired_text = 23;</code>
   */
  boolean hasCreditCardExpiredText();
  /**
   * <pre>
   * The error message to display when the selected credit card is expired.
   * </pre>
   *
   * <code>optional string credit_card_expired_text = 23;</code>
   */
  java.lang.String getCreditCardExpiredText();
  /**
   * <pre>
   * The error message to display when the selected credit card is expired.
   * </pre>
   *
   * <code>optional string credit_card_expired_text = 23;</code>
   */
  com.google.protobuf.ByteString
      getCreditCardExpiredTextBytes();

  /**
   * <pre>
   * The login details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.LoginDetailsProto login_details = 16;</code>
   */
  boolean hasLoginDetails();
  /**
   * <pre>
   * The login details that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.LoginDetailsProto login_details = 16;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.LoginDetailsProto getLoginDetails();

  /**
   * <pre>
   * The date/time range that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.DateTimeRangeProto date_time_range = 17;</code>
   */
  boolean hasDateTimeRange();
  /**
   * <pre>
   * The date/time range that should be gathered.
   * </pre>
   *
   * <code>optional .autofill_assistant.DateTimeRangeProto date_time_range = 17;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.DateTimeRangeProto getDateTimeRange();

  /**
   * <pre>
   * An optional list of additional sections, which is above all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_prepended_sections = 18;</code>
   */
  java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UserFormSectionProto> 
      getAdditionalPrependedSectionsList();
  /**
   * <pre>
   * An optional list of additional sections, which is above all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_prepended_sections = 18;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.UserFormSectionProto getAdditionalPrependedSections(int index);
  /**
   * <pre>
   * An optional list of additional sections, which is above all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_prepended_sections = 18;</code>
   */
  int getAdditionalPrependedSectionsCount();

  /**
   * <pre>
   * An optional list of additional sections, which is below all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_appended_sections = 19;</code>
   */
  java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.UserFormSectionProto> 
      getAdditionalAppendedSectionsList();
  /**
   * <pre>
   * An optional list of additional sections, which is below all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_appended_sections = 19;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.UserFormSectionProto getAdditionalAppendedSections(int index);
  /**
   * <pre>
   * An optional list of additional sections, which is below all other sections.
   * </pre>
   *
   * <code>repeated .autofill_assistant.UserFormSectionProto additional_appended_sections = 19;</code>
   */
  int getAdditionalAppendedSectionsCount();

  /**
   * <pre>
   * Backend-configured user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.GenericUserInterfaceProto generic_user_interface = 22;</code>
   */
  boolean hasGenericUserInterface();
  /**
   * <pre>
   * Backend-configured user interface to show.
   * </pre>
   *
   * <code>optional .autofill_assistant.GenericUserInterfaceProto generic_user_interface = 22;</code>
   */
  org.chromium.chrome.browser.autofill_assistant.proto.GenericUserInterfaceProto getGenericUserInterface();
}
