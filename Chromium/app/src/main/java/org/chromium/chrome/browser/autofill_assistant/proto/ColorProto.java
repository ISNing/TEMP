// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: generic_ui.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.ColorProto}
 */
public  final class ColorProto extends
    com.google.protobuf.GeneratedMessageLite<
        ColorProto, ColorProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.ColorProto)
    ColorProtoOrBuilder {
  private ColorProto() {
  }
  private int bitField0_;
  private int colorCase_ = 0;
  private java.lang.Object color_;
  public enum ColorCase
      implements com.google.protobuf.Internal.EnumLite {
    RESOURCE_IDENTIFIER(1),
    PARSEABLE_COLOR(2),
    COLOR_NOT_SET(0);
    private final int value;
    private ColorCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ColorCase valueOf(int value) {
      return forNumber(value);
    }

    public static ColorCase forNumber(int value) {
      switch (value) {
        case 1: return RESOURCE_IDENTIFIER;
        case 2: return PARSEABLE_COLOR;
        case 0: return COLOR_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ColorCase
  getColorCase() {
    return ColorCase.forNumber(
        colorCase_);
  }

  private void clearColor() {
    colorCase_ = 0;
    color_ = null;
  }

  public static final int RESOURCE_IDENTIFIER_FIELD_NUMBER = 1;
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  public boolean hasResourceIdentifier() {
    return colorCase_ == 1;
  }
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  public java.lang.String getResourceIdentifier() {
    java.lang.String ref = "";
    if (colorCase_ == 1) {
      ref = (java.lang.String) color_;
    }
    return ref;
  }
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  public com.google.protobuf.ByteString
      getResourceIdentifierBytes() {
    java.lang.String ref = "";
    if (colorCase_ == 1) {
      ref = (java.lang.String) color_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  private void setResourceIdentifier(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  colorCase_ = 1;
    color_ = value;
  }
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  private void clearResourceIdentifier() {
    if (colorCase_ == 1) {
      colorCase_ = 0;
      color_ = null;
    }
  }
  /**
   * <pre>
   * The resource identifier of a color.
   * </pre>
   *
   * <code>optional string resource_identifier = 1;</code>
   */
  private void setResourceIdentifierBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  colorCase_ = 1;
    color_ = value.toStringUtf8();
  }

  public static final int PARSEABLE_COLOR_FIELD_NUMBER = 2;
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  public boolean hasParseableColor() {
    return colorCase_ == 2;
  }
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  public java.lang.String getParseableColor() {
    java.lang.String ref = "";
    if (colorCase_ == 2) {
      ref = (java.lang.String) color_;
    }
    return ref;
  }
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  public com.google.protobuf.ByteString
      getParseableColorBytes() {
    java.lang.String ref = "";
    if (colorCase_ == 2) {
      ref = (java.lang.String) color_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  private void setParseableColor(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  colorCase_ = 2;
    color_ = value;
  }
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  private void clearParseableColor() {
    if (colorCase_ == 2) {
      colorCase_ = 0;
      color_ = null;
    }
  }
  /**
   * <pre>
   * A color in the #RRGGBB or #AARRGGBB format.
   * </pre>
   *
   * <code>optional string parseable_color = 2;</code>
   */
  private void setParseableColorBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  colorCase_ = 2;
    color_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (colorCase_ == 1) {
      output.writeString(1, getResourceIdentifier());
    }
    if (colorCase_ == 2) {
      output.writeString(2, getParseableColor());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (colorCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getResourceIdentifier());
    }
    if (colorCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getParseableColor());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.ColorProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.ColorProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.ColorProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.ColorProto)
      org.chromium.chrome.browser.autofill_assistant.proto.ColorProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.ColorProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public ColorCase
        getColorCase() {
      return instance.getColorCase();
    }

    public Builder clearColor() {
      copyOnWrite();
      instance.clearColor();
      return this;
    }


    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public boolean hasResourceIdentifier() {
      return instance.hasResourceIdentifier();
    }
    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public java.lang.String getResourceIdentifier() {
      return instance.getResourceIdentifier();
    }
    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public com.google.protobuf.ByteString
        getResourceIdentifierBytes() {
      return instance.getResourceIdentifierBytes();
    }
    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public Builder setResourceIdentifier(
        java.lang.String value) {
      copyOnWrite();
      instance.setResourceIdentifier(value);
      return this;
    }
    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public Builder clearResourceIdentifier() {
      copyOnWrite();
      instance.clearResourceIdentifier();
      return this;
    }
    /**
     * <pre>
     * The resource identifier of a color.
     * </pre>
     *
     * <code>optional string resource_identifier = 1;</code>
     */
    public Builder setResourceIdentifierBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setResourceIdentifierBytes(value);
      return this;
    }

    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public boolean hasParseableColor() {
      return instance.hasParseableColor();
    }
    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public java.lang.String getParseableColor() {
      return instance.getParseableColor();
    }
    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public com.google.protobuf.ByteString
        getParseableColorBytes() {
      return instance.getParseableColorBytes();
    }
    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public Builder setParseableColor(
        java.lang.String value) {
      copyOnWrite();
      instance.setParseableColor(value);
      return this;
    }
    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public Builder clearParseableColor() {
      copyOnWrite();
      instance.clearParseableColor();
      return this;
    }
    /**
     * <pre>
     * A color in the #RRGGBB or #AARRGGBB format.
     * </pre>
     *
     * <code>optional string parseable_color = 2;</code>
     */
    public Builder setParseableColorBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setParseableColorBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.ColorProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.ColorProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.ColorProto other = (org.chromium.chrome.browser.autofill_assistant.proto.ColorProto) arg1;
        switch (other.getColorCase()) {
          case RESOURCE_IDENTIFIER: {
            color_ = visitor.visitOneofString(
               colorCase_ == 1, color_, other.color_);
            break;
          }
          case PARSEABLE_COLOR: {
            color_ = visitor.visitOneofString(
               colorCase_ == 2, color_, other.color_);
            break;
          }
          case COLOR_NOT_SET: {
            visitor.visitOneofNotSet(colorCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.colorCase_ != 0) {
            colorCase_ = other.colorCase_;
          }
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                colorCase_ = 1;
                color_ = s;
                break;
              }
              case 18: {
                String s = input.readString();
                colorCase_ = 2;
                color_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.ColorProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.ColorProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.ColorProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ColorProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.ColorProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ColorProto> PARSER;

  public static com.google.protobuf.Parser<ColorProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

