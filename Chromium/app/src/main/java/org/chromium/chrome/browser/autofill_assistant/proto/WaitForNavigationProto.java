// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * <pre>
 * Wait for the browser to have navigated to a new page since the last
 * ExpectNavigation or Navigate. This returns as soon as an HTTP response that's
 * not a redirect was received for the new page, possibly before even loading
 * the page content.
 * Will return immediately if navigation already happened.
 * Client errors:
 *   NAVIGATION_ERROR if navigation failed
 *   TIMED_OUT if timed out waiting for navigation to start
 *   INVALID_ACTION no ExpectNavigation or Navigate action was executed in the
 *     current script.
 * </pre>
 *
 * Protobuf type {@code autofill_assistant.WaitForNavigationProto}
 */
public  final class WaitForNavigationProto extends
    com.google.protobuf.GeneratedMessageLite<
        WaitForNavigationProto, WaitForNavigationProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.WaitForNavigationProto)
    WaitForNavigationProtoOrBuilder {
  private WaitForNavigationProto() {
  }
  private int bitField0_;
  public static final int TIMEOUT_MS_FIELD_NUMBER = 1;
  private int timeoutMs_;
  /**
   * <pre>
   * How long to wait for navigation to start before failing with client status
   * TIMED_OUT. The action waits 20s by default.
   * This is usually used to track cases where expected navigation doesn't
   * happen, because, for example, a click wasn't registered.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  public boolean hasTimeoutMs() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * How long to wait for navigation to start before failing with client status
   * TIMED_OUT. The action waits 20s by default.
   * This is usually used to track cases where expected navigation doesn't
   * happen, because, for example, a click wasn't registered.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  public int getTimeoutMs() {
    return timeoutMs_;
  }
  /**
   * <pre>
   * How long to wait for navigation to start before failing with client status
   * TIMED_OUT. The action waits 20s by default.
   * This is usually used to track cases where expected navigation doesn't
   * happen, because, for example, a click wasn't registered.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  private void setTimeoutMs(int value) {
    bitField0_ |= 0x00000001;
    timeoutMs_ = value;
  }
  /**
   * <pre>
   * How long to wait for navigation to start before failing with client status
   * TIMED_OUT. The action waits 20s by default.
   * This is usually used to track cases where expected navigation doesn't
   * happen, because, for example, a click wasn't registered.
   * </pre>
   *
   * <code>optional int32 timeout_ms = 1;</code>
   */
  private void clearTimeoutMs() {
    bitField0_ = (bitField0_ & ~0x00000001);
    timeoutMs_ = 0;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeInt32(1, timeoutMs_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, timeoutMs_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Wait for the browser to have navigated to a new page since the last
   * ExpectNavigation or Navigate. This returns as soon as an HTTP response that's
   * not a redirect was received for the new page, possibly before even loading
   * the page content.
   * Will return immediately if navigation already happened.
   * Client errors:
   *   NAVIGATION_ERROR if navigation failed
   *   TIMED_OUT if timed out waiting for navigation to start
   *   INVALID_ACTION no ExpectNavigation or Navigate action was executed in the
   *     current script.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.WaitForNavigationProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.WaitForNavigationProto)
      org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * How long to wait for navigation to start before failing with client status
     * TIMED_OUT. The action waits 20s by default.
     * This is usually used to track cases where expected navigation doesn't
     * happen, because, for example, a click wasn't registered.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     */
    public boolean hasTimeoutMs() {
      return instance.hasTimeoutMs();
    }
    /**
     * <pre>
     * How long to wait for navigation to start before failing with client status
     * TIMED_OUT. The action waits 20s by default.
     * This is usually used to track cases where expected navigation doesn't
     * happen, because, for example, a click wasn't registered.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     */
    public int getTimeoutMs() {
      return instance.getTimeoutMs();
    }
    /**
     * <pre>
     * How long to wait for navigation to start before failing with client status
     * TIMED_OUT. The action waits 20s by default.
     * This is usually used to track cases where expected navigation doesn't
     * happen, because, for example, a click wasn't registered.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     */
    public Builder setTimeoutMs(int value) {
      copyOnWrite();
      instance.setTimeoutMs(value);
      return this;
    }
    /**
     * <pre>
     * How long to wait for navigation to start before failing with client status
     * TIMED_OUT. The action waits 20s by default.
     * This is usually used to track cases where expected navigation doesn't
     * happen, because, for example, a click wasn't registered.
     * </pre>
     *
     * <code>optional int32 timeout_ms = 1;</code>
     */
    public Builder clearTimeoutMs() {
      copyOnWrite();
      instance.clearTimeoutMs();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.WaitForNavigationProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto other = (org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto) arg1;
        timeoutMs_ = visitor.visitInt(
            hasTimeoutMs(), timeoutMs_,
            other.hasTimeoutMs(), other.timeoutMs_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                timeoutMs_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.WaitForNavigationProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new WaitForNavigationProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.WaitForNavigationProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WaitForNavigationProto> PARSER;

  public static com.google.protobuf.Parser<WaitForNavigationProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

