// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto

package org.chromium.chrome.browser.autofill_assistant.proto;

/**
 * Protobuf type {@code autofill_assistant.FormProto}
 */
public  final class FormProto extends
    com.google.protobuf.GeneratedMessageLite<
        FormProto, FormProto.Builder> implements
    // @@protoc_insertion_point(message_implements:autofill_assistant.FormProto)
    FormProtoOrBuilder {
  private FormProto() {
    inputs_ = emptyProtobufList();
    infoLabel_ = "";
  }
  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:autofill_assistant.FormProto.Result)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> 
        getInputResultsList();
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result getInputResults(int index);
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    int getInputResultsCount();

    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    boolean hasLink();
    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    int getLink();
  }
  /**
   * <pre>
   * A result associated to this form, such that |input_results[i]| is the
   * result of |inputs[i]|. If the user clicks a link while in the form action,
   * |link| will be set to the index of the clicked link and |input_results|
   * may be incomplete.
   * </pre>
   *
   * Protobuf type {@code autofill_assistant.FormProto.Result}
   */
  public  static final class Result extends
      com.google.protobuf.GeneratedMessageLite<
          Result, Result.Builder> implements
      // @@protoc_insertion_point(message_implements:autofill_assistant.FormProto.Result)
      ResultOrBuilder {
    private Result() {
      inputResults_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int INPUT_RESULTS_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> inputResults_;
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> getInputResultsList() {
      return inputResults_;
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.ResultOrBuilder> 
        getInputResultsOrBuilderList() {
      return inputResults_;
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    public int getInputResultsCount() {
      return inputResults_.size();
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result getInputResults(int index) {
      return inputResults_.get(index);
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.ResultOrBuilder getInputResultsOrBuilder(
        int index) {
      return inputResults_.get(index);
    }
    private void ensureInputResultsIsMutable() {
      if (!inputResults_.isModifiable()) {
        inputResults_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(inputResults_);
       }
    }

    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void setInputResults(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputResultsIsMutable();
      inputResults_.set(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void setInputResults(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
      ensureInputResultsIsMutable();
      inputResults_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void addInputResults(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputResultsIsMutable();
      inputResults_.add(value);
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void addInputResults(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureInputResultsIsMutable();
      inputResults_.add(index, value);
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void addInputResults(
        org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
      ensureInputResultsIsMutable();
      inputResults_.add(builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void addInputResults(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
      ensureInputResultsIsMutable();
      inputResults_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void addAllInputResults(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> values) {
      ensureInputResultsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, inputResults_);
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void clearInputResults() {
      inputResults_ = emptyProtobufList();
    }
    /**
     * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
     */
    private void removeInputResults(int index) {
      ensureInputResultsIsMutable();
      inputResults_.remove(index);
    }

    public static final int LINK_FIELD_NUMBER = 2;
    private int link_;
    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    public boolean hasLink() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    public int getLink() {
      return link_;
    }
    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    private void setLink(int value) {
      bitField0_ |= 0x00000001;
      link_ = value;
    }
    /**
     * <pre>
     * If this is set, it contains the index of the text link that was clicked.
     * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
     * clicked.
     * </pre>
     *
     * <code>optional int32 link = 2;</code>
     */
    private void clearLink() {
      bitField0_ = (bitField0_ & ~0x00000001);
      link_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < inputResults_.size(); i++) {
        output.writeMessage(1, inputResults_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, link_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < inputResults_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, inputResults_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, link_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * <pre>
     * A result associated to this form, such that |input_results[i]| is the
     * result of |inputs[i]|. If the user clicks a link while in the form action,
     * |link| will be set to the index of the clicked link and |input_results|
     * may be incomplete.
     * </pre>
     *
     * Protobuf type {@code autofill_assistant.FormProto.Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result, Builder> implements
        // @@protoc_insertion_point(builder_implements:autofill_assistant.FormProto.Result)
        org.chromium.chrome.browser.autofill_assistant.proto.FormProto.ResultOrBuilder {
      // Construct using org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> getInputResultsList() {
        return java.util.Collections.unmodifiableList(
            instance.getInputResultsList());
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public int getInputResultsCount() {
        return instance.getInputResultsCount();
      }/**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result getInputResults(int index) {
        return instance.getInputResults(index);
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder setInputResults(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
        copyOnWrite();
        instance.setInputResults(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder setInputResults(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
        copyOnWrite();
        instance.setInputResults(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder addInputResults(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
        copyOnWrite();
        instance.addInputResults(value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder addInputResults(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result value) {
        copyOnWrite();
        instance.addInputResults(index, value);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder addInputResults(
          org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
        copyOnWrite();
        instance.addInputResults(builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder addInputResults(
          int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.Builder builderForValue) {
        copyOnWrite();
        instance.addInputResults(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder addAllInputResults(
          java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result> values) {
        copyOnWrite();
        instance.addAllInputResults(values);
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder clearInputResults() {
        copyOnWrite();
        instance.clearInputResults();
        return this;
      }
      /**
       * <code>repeated .autofill_assistant.FormInputProto.Result input_results = 1;</code>
       */
      public Builder removeInputResults(int index) {
        copyOnWrite();
        instance.removeInputResults(index);
        return this;
      }

      /**
       * <pre>
       * If this is set, it contains the index of the text link that was clicked.
       * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
       * clicked.
       * </pre>
       *
       * <code>optional int32 link = 2;</code>
       */
      public boolean hasLink() {
        return instance.hasLink();
      }
      /**
       * <pre>
       * If this is set, it contains the index of the text link that was clicked.
       * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
       * clicked.
       * </pre>
       *
       * <code>optional int32 link = 2;</code>
       */
      public int getLink() {
        return instance.getLink();
      }
      /**
       * <pre>
       * If this is set, it contains the index of the text link that was clicked.
       * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
       * clicked.
       * </pre>
       *
       * <code>optional int32 link = 2;</code>
       */
      public Builder setLink(int value) {
        copyOnWrite();
        instance.setLink(value);
        return this;
      }
      /**
       * <pre>
       * If this is set, it contains the index of the text link that was clicked.
       * E.g., &lt;link4&gt;Details&lt;/link4&gt; will populate this field with '4' when
       * clicked.
       * </pre>
       *
       * <code>optional int32 link = 2;</code>
       */
      public Builder clearLink() {
        copyOnWrite();
        instance.clearLink();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:autofill_assistant.FormProto.Result)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          inputResults_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result other = (org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result) arg1;
          inputResults_= visitor.visitList(inputResults_, other.inputResults_);
          link_ = visitor.visitInt(
              hasLink(), link_,
              other.hasLink(), other.link_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!inputResults_.isModifiable()) {
                    inputResults_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(inputResults_);
                  }
                  inputResults_.add(
                      input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Result.parser(), extensionRegistry));
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000001;
                  link_ = input.readInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:autofill_assistant.FormProto.Result)
    private static final org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Result();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto.Result getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Result> PARSER;

    public static com.google.protobuf.Parser<Result> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  private int bitField0_;
  public static final int INPUTS_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto> inputs_;
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto> getInputsList() {
    return inputs_;
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  public java.util.List<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProtoOrBuilder> 
      getInputsOrBuilderList() {
    return inputs_;
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  public int getInputsCount() {
    return inputs_.size();
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto getInputs(int index) {
    return inputs_.get(index);
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProtoOrBuilder getInputsOrBuilder(
      int index) {
    return inputs_.get(index);
  }
  private void ensureInputsIsMutable() {
    if (!inputs_.isModifiable()) {
      inputs_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(inputs_);
     }
  }

  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void setInputs(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureInputsIsMutable();
    inputs_.set(index, value);
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void setInputs(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
    ensureInputsIsMutable();
    inputs_.set(index, builderForValue.build());
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void addInputs(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureInputsIsMutable();
    inputs_.add(value);
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void addInputs(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    ensureInputsIsMutable();
    inputs_.add(index, value);
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void addInputs(
      org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
    ensureInputsIsMutable();
    inputs_.add(builderForValue.build());
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void addInputs(
      int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
    ensureInputsIsMutable();
    inputs_.add(index, builderForValue.build());
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void addAllInputs(
      java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto> values) {
    ensureInputsIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, inputs_);
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void clearInputs() {
    inputs_ = emptyProtobufList();
  }
  /**
   * <pre>
   * The different inputs to display.
   * </pre>
   *
   * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
   */
  private void removeInputs(int index) {
    ensureInputsIsMutable();
    inputs_.remove(index);
  }

  public static final int INFO_LABEL_FIELD_NUMBER = 2;
  private java.lang.String infoLabel_;
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  public boolean hasInfoLabel() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  public java.lang.String getInfoLabel() {
    return infoLabel_;
  }
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  public com.google.protobuf.ByteString
      getInfoLabelBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(infoLabel_);
  }
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  private void setInfoLabel(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    infoLabel_ = value;
  }
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  private void clearInfoLabel() {
    bitField0_ = (bitField0_ & ~0x00000001);
    infoLabel_ = getDefaultInstance().getInfoLabel();
  }
  /**
   * <pre>
   * Optionally adds an informational text below the form.
   * </pre>
   *
   * <code>optional string info_label = 2;</code>
   */
  private void setInfoLabelBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
    infoLabel_ = value.toStringUtf8();
  }

  public static final int INFO_POPUP_FIELD_NUMBER = 3;
  private org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto infoPopup_;
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  public boolean hasInfoPopup() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto getInfoPopup() {
    return infoPopup_ == null ? org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.getDefaultInstance() : infoPopup_;
  }
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  private void setInfoPopup(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto value) {
    if (value == null) {
      throw new NullPointerException();
    }
    infoPopup_ = value;
    bitField0_ |= 0x00000002;
    }
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  private void setInfoPopup(
      org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.Builder builderForValue) {
    infoPopup_ = builderForValue.build();
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  private void mergeInfoPopup(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto value) {
    if (infoPopup_ != null &&
        infoPopup_ != org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.getDefaultInstance()) {
      infoPopup_ =
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.newBuilder(infoPopup_).mergeFrom(value).buildPartial();
    } else {
      infoPopup_ = value;
    }
    bitField0_ |= 0x00000002;
  }
  /**
   * <pre>
   * If set, an info icon will be shown next to the info label that prompts a
   * popup when tapped. Ignored if info_label is not set.
   * </pre>
   *
   * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
   */
  private void clearInfoPopup() {  infoPopup_ = null;
    bitField0_ = (bitField0_ & ~0x00000002);
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < inputs_.size(); i++) {
      output.writeMessage(1, inputs_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeString(2, getInfoLabel());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      output.writeMessage(3, getInfoPopup());
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < inputs_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, inputs_.get(i));
    }
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getInfoLabel());
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getInfoPopup());
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.chrome.browser.autofill_assistant.proto.FormProto prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code autofill_assistant.FormProto}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.chrome.browser.autofill_assistant.proto.FormProto, Builder> implements
      // @@protoc_insertion_point(builder_implements:autofill_assistant.FormProto)
      org.chromium.chrome.browser.autofill_assistant.proto.FormProtoOrBuilder {
    // Construct using org.chromium.chrome.browser.autofill_assistant.proto.FormProto.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public java.util.List<org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto> getInputsList() {
      return java.util.Collections.unmodifiableList(
          instance.getInputsList());
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public int getInputsCount() {
      return instance.getInputsCount();
    }/**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto getInputs(int index) {
      return instance.getInputs(index);
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder setInputs(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
      copyOnWrite();
      instance.setInputs(index, value);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder setInputs(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
      copyOnWrite();
      instance.setInputs(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder addInputs(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
      copyOnWrite();
      instance.addInputs(value);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder addInputs(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto value) {
      copyOnWrite();
      instance.addInputs(index, value);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder addInputs(
        org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
      copyOnWrite();
      instance.addInputs(builderForValue);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder addInputs(
        int index, org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.Builder builderForValue) {
      copyOnWrite();
      instance.addInputs(index, builderForValue);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder addAllInputs(
        java.lang.Iterable<? extends org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto> values) {
      copyOnWrite();
      instance.addAllInputs(values);
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder clearInputs() {
      copyOnWrite();
      instance.clearInputs();
      return this;
    }
    /**
     * <pre>
     * The different inputs to display.
     * </pre>
     *
     * <code>repeated .autofill_assistant.FormInputProto inputs = 1;</code>
     */
    public Builder removeInputs(int index) {
      copyOnWrite();
      instance.removeInputs(index);
      return this;
    }

    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public boolean hasInfoLabel() {
      return instance.hasInfoLabel();
    }
    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public java.lang.String getInfoLabel() {
      return instance.getInfoLabel();
    }
    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInfoLabelBytes() {
      return instance.getInfoLabelBytes();
    }
    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public Builder setInfoLabel(
        java.lang.String value) {
      copyOnWrite();
      instance.setInfoLabel(value);
      return this;
    }
    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public Builder clearInfoLabel() {
      copyOnWrite();
      instance.clearInfoLabel();
      return this;
    }
    /**
     * <pre>
     * Optionally adds an informational text below the form.
     * </pre>
     *
     * <code>optional string info_label = 2;</code>
     */
    public Builder setInfoLabelBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setInfoLabelBytes(value);
      return this;
    }

    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public boolean hasInfoPopup() {
      return instance.hasInfoPopup();
    }
    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto getInfoPopup() {
      return instance.getInfoPopup();
    }
    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public Builder setInfoPopup(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto value) {
      copyOnWrite();
      instance.setInfoPopup(value);
      return this;
      }
    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public Builder setInfoPopup(
        org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.Builder builderForValue) {
      copyOnWrite();
      instance.setInfoPopup(builderForValue);
      return this;
    }
    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public Builder mergeInfoPopup(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto value) {
      copyOnWrite();
      instance.mergeInfoPopup(value);
      return this;
    }
    /**
     * <pre>
     * If set, an info icon will be shown next to the info label that prompts a
     * popup when tapped. Ignored if info_label is not set.
     * </pre>
     *
     * <code>optional .autofill_assistant.InfoPopupProto info_popup = 3;</code>
     */
    public Builder clearInfoPopup() {  copyOnWrite();
      instance.clearInfoPopup();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:autofill_assistant.FormProto)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.chrome.browser.autofill_assistant.proto.FormProto();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        inputs_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.chrome.browser.autofill_assistant.proto.FormProto other = (org.chromium.chrome.browser.autofill_assistant.proto.FormProto) arg1;
        inputs_= visitor.visitList(inputs_, other.inputs_);
        infoLabel_ = visitor.visitString(
            hasInfoLabel(), infoLabel_,
            other.hasInfoLabel(), other.infoLabel_);
        infoPopup_ = visitor.visitMessage(infoPopup_, other.infoPopup_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          bitField0_ |= other.bitField0_;
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!inputs_.isModifiable()) {
                  inputs_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(inputs_);
                }
                inputs_.add(
                    input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.FormInputProto.parser(), extensionRegistry));
                break;
              }
              case 18: {
                String s = input.readString();
                bitField0_ |= 0x00000001;
                infoLabel_ = s;
                break;
              }
              case 26: {
                org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.Builder subBuilder = null;
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                  subBuilder = infoPopup_.toBuilder();
                }
                infoPopup_ = input.readMessage(org.chromium.chrome.browser.autofill_assistant.proto.InfoPopupProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(infoPopup_);
                  infoPopup_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000002;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.chrome.browser.autofill_assistant.proto.FormProto.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:autofill_assistant.FormProto)
  private static final org.chromium.chrome.browser.autofill_assistant.proto.FormProto DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new FormProto();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.chrome.browser.autofill_assistant.proto.FormProto getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<FormProto> PARSER;

  public static com.google.protobuf.Parser<FormProto> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

