// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_message.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Message for responding to a SharingMessage.
 * </pre>
 *
 * Protobuf type {@code chrome_browser_sharing.ResponseMessage}
 */
public  final class ResponseMessage extends
    com.google.protobuf.GeneratedMessageLite<
        ResponseMessage, ResponseMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:chrome_browser_sharing.ResponseMessage)
    ResponseMessageOrBuilder {
  private ResponseMessage() {
  }
  private int payloadCase_ = 0;
  private java.lang.Object payload_;
  public enum PayloadCase
      implements com.google.protobuf.Internal.EnumLite {
    SMS_FETCH_RESPONSE(1),
    SIGNALLING_MESSAGE_RESPONSE(2),
    PAYLOAD_NOT_SET(0);
    private final int value;
    private PayloadCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PayloadCase valueOf(int value) {
      return forNumber(value);
    }

    public static PayloadCase forNumber(int value) {
      switch (value) {
        case 1: return SMS_FETCH_RESPONSE;
        case 2: return SIGNALLING_MESSAGE_RESPONSE;
        case 0: return PAYLOAD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PayloadCase
  getPayloadCase() {
    return PayloadCase.forNumber(
        payloadCase_);
  }

  private void clearPayload() {
    payloadCase_ = 0;
    payload_ = null;
  }

  public static final int SMS_FETCH_RESPONSE_FIELD_NUMBER = 1;
  /**
   * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
   */
  public org.chromium.components.sync.protocol.SmsFetchResponse getSmsFetchResponse() {
    if (payloadCase_ == 1) {
       return (org.chromium.components.sync.protocol.SmsFetchResponse) payload_;
    }
    return org.chromium.components.sync.protocol.SmsFetchResponse.getDefaultInstance();
  }
  /**
   * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
   */
  private void setSmsFetchResponse(org.chromium.components.sync.protocol.SmsFetchResponse value) {
    if (value == null) {
      throw new NullPointerException();
    }
    payload_ = value;
    payloadCase_ = 1;
  }
  /**
   * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
   */
  private void setSmsFetchResponse(
      org.chromium.components.sync.protocol.SmsFetchResponse.Builder builderForValue) {
    payload_ = builderForValue.build();
    payloadCase_ = 1;
  }
  /**
   * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
   */
  private void mergeSmsFetchResponse(org.chromium.components.sync.protocol.SmsFetchResponse value) {
    if (payloadCase_ == 1 &&
        payload_ != org.chromium.components.sync.protocol.SmsFetchResponse.getDefaultInstance()) {
      payload_ = org.chromium.components.sync.protocol.SmsFetchResponse.newBuilder((org.chromium.components.sync.protocol.SmsFetchResponse) payload_)
          .mergeFrom(value).buildPartial();
    } else {
      payload_ = value;
    }
    payloadCase_ = 1;
  }
  /**
   * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
   */
  private void clearSmsFetchResponse() {
    if (payloadCase_ == 1) {
      payloadCase_ = 0;
      payload_ = null;
    }
  }

  public static final int SIGNALLING_MESSAGE_RESPONSE_FIELD_NUMBER = 2;
  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
   */
  public org.chromium.components.sync.protocol.SignallingMessage getSignallingMessageResponse() {
    if (payloadCase_ == 2) {
       return (org.chromium.components.sync.protocol.SignallingMessage) payload_;
    }
    return org.chromium.components.sync.protocol.SignallingMessage.getDefaultInstance();
  }
  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
   */
  private void setSignallingMessageResponse(org.chromium.components.sync.protocol.SignallingMessage value) {
    if (value == null) {
      throw new NullPointerException();
    }
    payload_ = value;
    payloadCase_ = 2;
  }
  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
   */
  private void setSignallingMessageResponse(
      org.chromium.components.sync.protocol.SignallingMessage.Builder builderForValue) {
    payload_ = builderForValue.build();
    payloadCase_ = 2;
  }
  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
   */
  private void mergeSignallingMessageResponse(org.chromium.components.sync.protocol.SignallingMessage value) {
    if (payloadCase_ == 2 &&
        payload_ != org.chromium.components.sync.protocol.SignallingMessage.getDefaultInstance()) {
      payload_ = org.chromium.components.sync.protocol.SignallingMessage.newBuilder((org.chromium.components.sync.protocol.SignallingMessage) payload_)
          .mergeFrom(value).buildPartial();
    } else {
      payload_ = value;
    }
    payloadCase_ = 2;
  }
  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
   */
  private void clearSignallingMessageResponse() {
    if (payloadCase_ == 2) {
      payloadCase_ = 0;
      payload_ = null;
    }
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (payloadCase_ == 1) {
      output.writeMessage(1, (org.chromium.components.sync.protocol.SmsFetchResponse) payload_);
    }
    if (payloadCase_ == 2) {
      output.writeMessage(2, (org.chromium.components.sync.protocol.SignallingMessage) payload_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (payloadCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.chromium.components.sync.protocol.SmsFetchResponse) payload_);
    }
    if (payloadCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.chromium.components.sync.protocol.SignallingMessage) payload_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ResponseMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ResponseMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Message for responding to a SharingMessage.
   * </pre>
   *
   * Protobuf type {@code chrome_browser_sharing.ResponseMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ResponseMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:chrome_browser_sharing.ResponseMessage)
      org.chromium.components.sync.protocol.ResponseMessageOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ResponseMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public PayloadCase
        getPayloadCase() {
      return instance.getPayloadCase();
    }

    public Builder clearPayload() {
      copyOnWrite();
      instance.clearPayload();
      return this;
    }


    /**
     * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
     */
    public org.chromium.components.sync.protocol.SmsFetchResponse getSmsFetchResponse() {
      return instance.getSmsFetchResponse();
    }
    /**
     * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
     */
    public Builder setSmsFetchResponse(org.chromium.components.sync.protocol.SmsFetchResponse value) {
      copyOnWrite();
      instance.setSmsFetchResponse(value);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
     */
    public Builder setSmsFetchResponse(
        org.chromium.components.sync.protocol.SmsFetchResponse.Builder builderForValue) {
      copyOnWrite();
      instance.setSmsFetchResponse(builderForValue);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
     */
    public Builder mergeSmsFetchResponse(org.chromium.components.sync.protocol.SmsFetchResponse value) {
      copyOnWrite();
      instance.mergeSmsFetchResponse(value);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SmsFetchResponse sms_fetch_response = 1;</code>
     */
    public Builder clearSmsFetchResponse() {
      copyOnWrite();
      instance.clearSmsFetchResponse();
      return this;
    }

    /**
     * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
     */
    public org.chromium.components.sync.protocol.SignallingMessage getSignallingMessageResponse() {
      return instance.getSignallingMessageResponse();
    }
    /**
     * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
     */
    public Builder setSignallingMessageResponse(org.chromium.components.sync.protocol.SignallingMessage value) {
      copyOnWrite();
      instance.setSignallingMessageResponse(value);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
     */
    public Builder setSignallingMessageResponse(
        org.chromium.components.sync.protocol.SignallingMessage.Builder builderForValue) {
      copyOnWrite();
      instance.setSignallingMessageResponse(builderForValue);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
     */
    public Builder mergeSignallingMessageResponse(org.chromium.components.sync.protocol.SignallingMessage value) {
      copyOnWrite();
      instance.mergeSignallingMessageResponse(value);
      return this;
    }
    /**
     * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message_response = 2;</code>
     */
    public Builder clearSignallingMessageResponse() {
      copyOnWrite();
      instance.clearSignallingMessageResponse();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:chrome_browser_sharing.ResponseMessage)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ResponseMessage();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ResponseMessage other = (org.chromium.components.sync.protocol.ResponseMessage) arg1;
        switch (other.getPayloadCase()) {
          case SMS_FETCH_RESPONSE: {
            payload_ = visitor.visitOneofMessage(
                payloadCase_ == 1,
                payload_,
                other.payload_);
            break;
          }
          case SIGNALLING_MESSAGE_RESPONSE: {
            payload_ = visitor.visitOneofMessage(
                payloadCase_ == 2,
                payload_,
                other.payload_);
            break;
          }
          case PAYLOAD_NOT_SET: {
            visitor.visitOneofNotSet(payloadCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.payloadCase_ != 0) {
            payloadCase_ = other.payloadCase_;
          }
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.chromium.components.sync.protocol.SmsFetchResponse.Builder subBuilder = null;
                if (payloadCase_ == 1) {
                  subBuilder = ((org.chromium.components.sync.protocol.SmsFetchResponse) payload_).toBuilder();
                }
                payload_ =
                     input.readMessage(org.chromium.components.sync.protocol.SmsFetchResponse.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.chromium.components.sync.protocol.SmsFetchResponse) payload_);
                  payload_ = subBuilder.buildPartial();
                }
                payloadCase_ = 1;
                break;
              }
              case 18: {
                org.chromium.components.sync.protocol.SignallingMessage.Builder subBuilder = null;
                if (payloadCase_ == 2) {
                  subBuilder = ((org.chromium.components.sync.protocol.SignallingMessage) payload_).toBuilder();
                }
                payload_ =
                     input.readMessage(org.chromium.components.sync.protocol.SignallingMessage.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((org.chromium.components.sync.protocol.SignallingMessage) payload_);
                  payload_ = subBuilder.buildPartial();
                }
                payloadCase_ = 2;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ResponseMessage.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:chrome_browser_sharing.ResponseMessage)
  private static final org.chromium.components.sync.protocol.ResponseMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ResponseMessage();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ResponseMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ResponseMessage> PARSER;

  public static com.google.protobuf.Parser<ResponseMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

