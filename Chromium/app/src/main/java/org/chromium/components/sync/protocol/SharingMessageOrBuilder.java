// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_message.proto

package org.chromium.components.sync.protocol;

public interface SharingMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chrome_browser_sharing.SharingMessage)
    com.google.protobuf.MessageLiteOrBuilder {

  /**
   * <pre>
   * Identifier of sender. required except for AckMessage.
   * </pre>
   *
   * <code>optional string sender_guid = 1;</code>
   */
  java.lang.String getSenderGuid();
  /**
   * <pre>
   * Identifier of sender. required except for AckMessage.
   * </pre>
   *
   * <code>optional string sender_guid = 1;</code>
   */
  com.google.protobuf.ByteString
      getSenderGuidBytes();

  /**
   * <code>optional .chrome_browser_sharing.PingMessage ping_message = 2;</code>
   */
  org.chromium.components.sync.protocol.PingMessage getPingMessage();

  /**
   * <code>optional .chrome_browser_sharing.AckMessage ack_message = 3;</code>
   */
  org.chromium.components.sync.protocol.AckMessage getAckMessage();

  /**
   * <code>optional .chrome_browser_sharing.ClickToCallMessage click_to_call_message = 4;</code>
   */
  org.chromium.components.sync.protocol.ClickToCallMessage getClickToCallMessage();

  /**
   * <code>optional .chrome_browser_sharing.SharedClipboardMessage shared_clipboard_message = 5;</code>
   */
  org.chromium.components.sync.protocol.SharedClipboardMessage getSharedClipboardMessage();

  /**
   * <code>optional .chrome_browser_sharing.SmsFetchRequest sms_fetch_request = 8;</code>
   */
  org.chromium.components.sync.protocol.SmsFetchRequest getSmsFetchRequest();

  /**
   * <code>optional .chrome_browser_sharing.RemoteCopyMessage remote_copy_message = 9;</code>
   */
  org.chromium.components.sync.protocol.RemoteCopyMessage getRemoteCopyMessage();

  /**
   * <code>optional .chrome_browser_sharing.SignallingMessage signalling_message = 10;</code>
   */
  org.chromium.components.sync.protocol.SignallingMessage getSignallingMessage();

  /**
   * <code>optional .chrome_browser_sharing.IceCandidateMessage ice_candidate_message = 11;</code>
   */
  org.chromium.components.sync.protocol.IceCandidateMessage getIceCandidateMessage();

  /**
   * <pre>
   * RecipientInfo for responding an AckMessage to the sender. optional.
   * </pre>
   *
   * <code>optional .chrome_browser_sharing.RecipientInfo sender_info = 6;</code>
   */
  boolean hasSenderInfo();
  /**
   * <pre>
   * RecipientInfo for responding an AckMessage to the sender. optional.
   * </pre>
   *
   * <code>optional .chrome_browser_sharing.RecipientInfo sender_info = 6;</code>
   */
  org.chromium.components.sync.protocol.RecipientInfo getSenderInfo();

  /**
   * <pre>
   * The name of the device sending this message. optional.
   * </pre>
   *
   * <code>optional string sender_device_name = 7;</code>
   */
  java.lang.String getSenderDeviceName();
  /**
   * <pre>
   * The name of the device sending this message. optional.
   * </pre>
   *
   * <code>optional string sender_device_name = 7;</code>
   */
  com.google.protobuf.ByteString
      getSenderDeviceNameBytes();

  public org.chromium.components.sync.protocol.SharingMessage.PayloadCase getPayloadCase();
}
