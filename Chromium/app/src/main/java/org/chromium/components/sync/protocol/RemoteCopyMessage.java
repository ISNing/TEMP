// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_remote_copy_message.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Message to pass content for the remote copy feature.
 * </pre>
 *
 * Protobuf type {@code chrome_browser_sharing.RemoteCopyMessage}
 */
public  final class RemoteCopyMessage extends
    com.google.protobuf.GeneratedMessageLite<
        RemoteCopyMessage, RemoteCopyMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:chrome_browser_sharing.RemoteCopyMessage)
    RemoteCopyMessageOrBuilder {
  private RemoteCopyMessage() {
  }
  private int contentCase_ = 0;
  private java.lang.Object content_;
  public enum ContentCase
      implements com.google.protobuf.Internal.EnumLite {
    TEXT(1),
    IMAGE_URL(2),
    CONTENT_NOT_SET(0);
    private final int value;
    private ContentCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ContentCase valueOf(int value) {
      return forNumber(value);
    }

    public static ContentCase forNumber(int value) {
      switch (value) {
        case 1: return TEXT;
        case 2: return IMAGE_URL;
        case 0: return CONTENT_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public ContentCase
  getContentCase() {
    return ContentCase.forNumber(
        contentCase_);
  }

  private void clearContent() {
    contentCase_ = 0;
    content_ = null;
  }

  public static final int TEXT_FIELD_NUMBER = 1;
  /**
   * <pre>
   * Plain text.
   * </pre>
   *
   * <code>optional string text = 1;</code>
   */
  public java.lang.String getText() {
    java.lang.String ref = "";
    if (contentCase_ == 1) {
      ref = (java.lang.String) content_;
    }
    return ref;
  }
  /**
   * <pre>
   * Plain text.
   * </pre>
   *
   * <code>optional string text = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTextBytes() {
    java.lang.String ref = "";
    if (contentCase_ == 1) {
      ref = (java.lang.String) content_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Plain text.
   * </pre>
   *
   * <code>optional string text = 1;</code>
   */
  private void setText(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 1;
    content_ = value;
  }
  /**
   * <pre>
   * Plain text.
   * </pre>
   *
   * <code>optional string text = 1;</code>
   */
  private void clearText() {
    if (contentCase_ == 1) {
      contentCase_ = 0;
      content_ = null;
    }
  }
  /**
   * <pre>
   * Plain text.
   * </pre>
   *
   * <code>optional string text = 1;</code>
   */
  private void setTextBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    contentCase_ = 1;
    content_ = value.toStringUtf8();
  }

  public static final int IMAGE_URL_FIELD_NUMBER = 2;
  /**
   * <pre>
   * The URL of an image to download and write to the clipboard.
   * </pre>
   *
   * <code>optional string image_url = 2;</code>
   */
  public java.lang.String getImageUrl() {
    java.lang.String ref = "";
    if (contentCase_ == 2) {
      ref = (java.lang.String) content_;
    }
    return ref;
  }
  /**
   * <pre>
   * The URL of an image to download and write to the clipboard.
   * </pre>
   *
   * <code>optional string image_url = 2;</code>
   */
  public com.google.protobuf.ByteString
      getImageUrlBytes() {
    java.lang.String ref = "";
    if (contentCase_ == 2) {
      ref = (java.lang.String) content_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * The URL of an image to download and write to the clipboard.
   * </pre>
   *
   * <code>optional string image_url = 2;</code>
   */
  private void setImageUrl(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  contentCase_ = 2;
    content_ = value;
  }
  /**
   * <pre>
   * The URL of an image to download and write to the clipboard.
   * </pre>
   *
   * <code>optional string image_url = 2;</code>
   */
  private void clearImageUrl() {
    if (contentCase_ == 2) {
      contentCase_ = 0;
      content_ = null;
    }
  }
  /**
   * <pre>
   * The URL of an image to download and write to the clipboard.
   * </pre>
   *
   * <code>optional string image_url = 2;</code>
   */
  private void setImageUrlBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    contentCase_ = 2;
    content_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (contentCase_ == 1) {
      output.writeString(1, getText());
    }
    if (contentCase_ == 2) {
      output.writeString(2, getImageUrl());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (contentCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getText());
    }
    if (contentCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(2, getImageUrl());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.RemoteCopyMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.RemoteCopyMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Message to pass content for the remote copy feature.
   * </pre>
   *
   * Protobuf type {@code chrome_browser_sharing.RemoteCopyMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.RemoteCopyMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:chrome_browser_sharing.RemoteCopyMessage)
      org.chromium.components.sync.protocol.RemoteCopyMessageOrBuilder {
    // Construct using org.chromium.components.sync.protocol.RemoteCopyMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    public ContentCase
        getContentCase() {
      return instance.getContentCase();
    }

    public Builder clearContent() {
      copyOnWrite();
      instance.clearContent();
      return this;
    }


    /**
     * <pre>
     * Plain text.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    public java.lang.String getText() {
      return instance.getText();
    }
    /**
     * <pre>
     * Plain text.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      return instance.getTextBytes();
    }
    /**
     * <pre>
     * Plain text.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    public Builder setText(
        java.lang.String value) {
      copyOnWrite();
      instance.setText(value);
      return this;
    }
    /**
     * <pre>
     * Plain text.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    public Builder clearText() {
      copyOnWrite();
      instance.clearText();
      return this;
    }
    /**
     * <pre>
     * Plain text.
     * </pre>
     *
     * <code>optional string text = 1;</code>
     */
    public Builder setTextBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setTextBytes(value);
      return this;
    }

    /**
     * <pre>
     * The URL of an image to download and write to the clipboard.
     * </pre>
     *
     * <code>optional string image_url = 2;</code>
     */
    public java.lang.String getImageUrl() {
      return instance.getImageUrl();
    }
    /**
     * <pre>
     * The URL of an image to download and write to the clipboard.
     * </pre>
     *
     * <code>optional string image_url = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImageUrlBytes() {
      return instance.getImageUrlBytes();
    }
    /**
     * <pre>
     * The URL of an image to download and write to the clipboard.
     * </pre>
     *
     * <code>optional string image_url = 2;</code>
     */
    public Builder setImageUrl(
        java.lang.String value) {
      copyOnWrite();
      instance.setImageUrl(value);
      return this;
    }
    /**
     * <pre>
     * The URL of an image to download and write to the clipboard.
     * </pre>
     *
     * <code>optional string image_url = 2;</code>
     */
    public Builder clearImageUrl() {
      copyOnWrite();
      instance.clearImageUrl();
      return this;
    }
    /**
     * <pre>
     * The URL of an image to download and write to the clipboard.
     * </pre>
     *
     * <code>optional string image_url = 2;</code>
     */
    public Builder setImageUrlBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setImageUrlBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:chrome_browser_sharing.RemoteCopyMessage)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.RemoteCopyMessage();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.RemoteCopyMessage other = (org.chromium.components.sync.protocol.RemoteCopyMessage) arg1;
        switch (other.getContentCase()) {
          case TEXT: {
            content_ = visitor.visitOneofString(
               contentCase_ == 1, content_, other.content_);
            break;
          }
          case IMAGE_URL: {
            content_ = visitor.visitOneofString(
               contentCase_ == 2, content_, other.content_);
            break;
          }
          case CONTENT_NOT_SET: {
            visitor.visitOneofNotSet(contentCase_ != 0);
            break;
          }
        }
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
          if (other.contentCase_ != 0) {
            contentCase_ = other.contentCase_;
          }
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();
                contentCase_ = 1;
                content_ = s;
                break;
              }
              case 18: {
                String s = input.readStringRequireUtf8();
                contentCase_ = 2;
                content_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.RemoteCopyMessage.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:chrome_browser_sharing.RemoteCopyMessage)
  private static final org.chromium.components.sync.protocol.RemoteCopyMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new RemoteCopyMessage();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.RemoteCopyMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<RemoteCopyMessage> PARSER;

  public static com.google.protobuf.Parser<RemoteCopyMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

