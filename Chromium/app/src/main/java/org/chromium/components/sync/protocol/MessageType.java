// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_message.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Enum for identifying a message type.
 * These values are persisted to logs. Entries should not be renumbered and
 * numeric values should never be reused. Keep this in sync with
 * SharingMessageType in enums.xml.
 * </pre>
 *
 * Protobuf enum {@code chrome_browser_sharing.MessageType}
 */
public enum MessageType
    implements com.google.protobuf.Internal.EnumLite {
  /**
   * <code>UNKNOWN_MESSAGE = 0;</code>
   */
  UNKNOWN_MESSAGE(0),
  /**
   * <code>PING_MESSAGE = 1;</code>
   */
  PING_MESSAGE(1),
  /**
   * <code>ACK_MESSAGE = 2;</code>
   */
  ACK_MESSAGE(2),
  /**
   * <code>CLICK_TO_CALL_MESSAGE = 3;</code>
   */
  CLICK_TO_CALL_MESSAGE(3),
  /**
   * <code>SHARED_CLIPBOARD_MESSAGE = 4;</code>
   */
  SHARED_CLIPBOARD_MESSAGE(4),
  /**
   * <code>SMS_FETCH_REQUEST = 5;</code>
   */
  SMS_FETCH_REQUEST(5),
  /**
   * <code>REMOTE_COPY_MESSAGE = 6;</code>
   */
  REMOTE_COPY_MESSAGE(6),
  /**
   * <code>SIGNALLING_MESSAGE = 7;</code>
   */
  SIGNALLING_MESSAGE(7),
  /**
   * <code>ICE_CANDIDATE_MESSAGE = 8;</code>
   */
  ICE_CANDIDATE_MESSAGE(8),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>UNKNOWN_MESSAGE = 0;</code>
   */
  public static final int UNKNOWN_MESSAGE_VALUE = 0;
  /**
   * <code>PING_MESSAGE = 1;</code>
   */
  public static final int PING_MESSAGE_VALUE = 1;
  /**
   * <code>ACK_MESSAGE = 2;</code>
   */
  public static final int ACK_MESSAGE_VALUE = 2;
  /**
   * <code>CLICK_TO_CALL_MESSAGE = 3;</code>
   */
  public static final int CLICK_TO_CALL_MESSAGE_VALUE = 3;
  /**
   * <code>SHARED_CLIPBOARD_MESSAGE = 4;</code>
   */
  public static final int SHARED_CLIPBOARD_MESSAGE_VALUE = 4;
  /**
   * <code>SMS_FETCH_REQUEST = 5;</code>
   */
  public static final int SMS_FETCH_REQUEST_VALUE = 5;
  /**
   * <code>REMOTE_COPY_MESSAGE = 6;</code>
   */
  public static final int REMOTE_COPY_MESSAGE_VALUE = 6;
  /**
   * <code>SIGNALLING_MESSAGE = 7;</code>
   */
  public static final int SIGNALLING_MESSAGE_VALUE = 7;
  /**
   * <code>ICE_CANDIDATE_MESSAGE = 8;</code>
   */
  public static final int ICE_CANDIDATE_MESSAGE_VALUE = 8;


  public final int getNumber() {
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MessageType valueOf(int value) {
    return forNumber(value);
  }

  public static MessageType forNumber(int value) {
    switch (value) {
      case 0: return UNKNOWN_MESSAGE;
      case 1: return PING_MESSAGE;
      case 2: return ACK_MESSAGE;
      case 3: return CLICK_TO_CALL_MESSAGE;
      case 4: return SHARED_CLIPBOARD_MESSAGE;
      case 5: return SMS_FETCH_REQUEST;
      case 6: return REMOTE_COPY_MESSAGE;
      case 7: return SIGNALLING_MESSAGE;
      case 8: return ICE_CANDIDATE_MESSAGE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MessageType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
          public MessageType findValueByNumber(int number) {
            return MessageType.forNumber(number);
          }
        };

  private final int value;

  private MessageType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:chrome_browser_sharing.MessageType)
}

