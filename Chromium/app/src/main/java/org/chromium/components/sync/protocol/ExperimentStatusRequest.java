// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: experiment_status.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * This request allows an unauthenticated client to check the status of the
 * experiments which do not require user authentication.  The status of an
 * experiment for a specific client can be determined based on the user agent
 * string and/or the client id sent in the HTTPS POST request.
 * </pre>
 *
 * Protobuf type {@code sync_pb.ExperimentStatusRequest}
 */
public  final class ExperimentStatusRequest extends
    com.google.protobuf.GeneratedMessageLite<
        ExperimentStatusRequest, ExperimentStatusRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:sync_pb.ExperimentStatusRequest)
    ExperimentStatusRequestOrBuilder {
  private ExperimentStatusRequest() {
    experimentName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  public static final int EXPERIMENT_NAME_FIELD_NUMBER = 1;
  private com.google.protobuf.Internal.ProtobufList<String> experimentName_;
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  public java.util.List<String> getExperimentNameList() {
    return experimentName_;
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  public int getExperimentNameCount() {
    return experimentName_.size();
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  public java.lang.String getExperimentName(int index) {
    return experimentName_.get(index);
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getExperimentNameBytes(int index) {
    return com.google.protobuf.ByteString.copyFromUtf8(
        experimentName_.get(index));
  }
  private void ensureExperimentNameIsMutable() {
    if (!experimentName_.isModifiable()) {
      experimentName_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(experimentName_);
     }
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  private void setExperimentName(
      int index, java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureExperimentNameIsMutable();
    experimentName_.set(index, value);
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  private void addExperimentName(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureExperimentNameIsMutable();
    experimentName_.add(value);
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  private void addAllExperimentName(
      java.lang.Iterable<java.lang.String> values) {
    ensureExperimentNameIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, experimentName_);
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  private void clearExperimentName() {
    experimentName_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
  }
  /**
   * <pre>
   * Enumerates the experiments for which the status should be returned.  An
   * experiment name must be the same as one of the field names specified in
   * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
   * </pre>
   *
   * <code>repeated string experiment_name = 1;</code>
   */
  private void addExperimentNameBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  ensureExperimentNameIsMutable();
    experimentName_.add(value.toStringUtf8());
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < experimentName_.size(); i++) {
      output.writeString(1, experimentName_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < experimentName_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeStringSizeNoTag(experimentName_.get(i));
      }
      size += dataSize;
      size += 1 * getExperimentNameList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.ExperimentStatusRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.ExperimentStatusRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * This request allows an unauthenticated client to check the status of the
   * experiments which do not require user authentication.  The status of an
   * experiment for a specific client can be determined based on the user agent
   * string and/or the client id sent in the HTTPS POST request.
   * </pre>
   *
   * Protobuf type {@code sync_pb.ExperimentStatusRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.ExperimentStatusRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:sync_pb.ExperimentStatusRequest)
      org.chromium.components.sync.protocol.ExperimentStatusRequestOrBuilder {
    // Construct using org.chromium.components.sync.protocol.ExperimentStatusRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public java.util.List<String>
        getExperimentNameList() {
      return java.util.Collections.unmodifiableList(
          instance.getExperimentNameList());
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public int getExperimentNameCount() {
      return instance.getExperimentNameCount();
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public java.lang.String getExperimentName(int index) {
      return instance.getExperimentName(index);
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getExperimentNameBytes(int index) {
      return instance.getExperimentNameBytes(index);
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public Builder setExperimentName(
        int index, java.lang.String value) {
      copyOnWrite();
      instance.setExperimentName(index, value);
      return this;
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public Builder addExperimentName(
        java.lang.String value) {
      copyOnWrite();
      instance.addExperimentName(value);
      return this;
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public Builder addAllExperimentName(
        java.lang.Iterable<java.lang.String> values) {
      copyOnWrite();
      instance.addAllExperimentName(values);
      return this;
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public Builder clearExperimentName() {
      copyOnWrite();
      instance.clearExperimentName();
      return this;
    }
    /**
     * <pre>
     * Enumerates the experiments for which the status should be returned.  An
     * experiment name must be the same as one of the field names specified in
     * ExperimentsSpecifics.  See sync/protocol/experiments_specifics.proto.
     * </pre>
     *
     * <code>repeated string experiment_name = 1;</code>
     */
    public Builder addExperimentNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.addExperimentNameBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:sync_pb.ExperimentStatusRequest)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.ExperimentStatusRequest();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        experimentName_.makeImmutable();
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.ExperimentStatusRequest other = (org.chromium.components.sync.protocol.ExperimentStatusRequest) arg1;
        experimentName_= visitor.visitList(experimentName_, other.experimentName_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(tag, input)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readString();
                if (!experimentName_.isModifiable()) {
                  experimentName_ =
                      com.google.protobuf.GeneratedMessageLite.mutableCopy(experimentName_);
                }
                experimentName_.add(s);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.ExperimentStatusRequest.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:sync_pb.ExperimentStatusRequest)
  private static final org.chromium.components.sync.protocol.ExperimentStatusRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new ExperimentStatusRequest();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.ExperimentStatusRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<ExperimentStatusRequest> PARSER;

  public static com.google.protobuf.Parser<ExperimentStatusRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

