// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sharing_peer_connection_messages.proto

package org.chromium.components.sync.protocol;

/**
 * <pre>
 * Used to exchange ice candidate messages between peers for webRTC connection.
 * </pre>
 *
 * Protobuf type {@code chrome_browser_sharing.IceCandidateMessage}
 */
public  final class IceCandidateMessage extends
    com.google.protobuf.GeneratedMessageLite<
        IceCandidateMessage, IceCandidateMessage.Builder> implements
    // @@protoc_insertion_point(message_implements:chrome_browser_sharing.IceCandidateMessage)
    IceCandidateMessageOrBuilder {
  private IceCandidateMessage() {
    sdpMessage_ = "";
    sdpMid_ = "";
  }
  public static final int SDP_MESSAGE_FIELD_NUMBER = 1;
  private java.lang.String sdpMessage_;
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_message = 1;</code>
   */
  public java.lang.String getSdpMessage() {
    return sdpMessage_;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_message = 1;</code>
   */
  public com.google.protobuf.ByteString
      getSdpMessageBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sdpMessage_);
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_message = 1;</code>
   */
  private void setSdpMessage(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    sdpMessage_ = value;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_message = 1;</code>
   */
  private void clearSdpMessage() {
    
    sdpMessage_ = getDefaultInstance().getSdpMessage();
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_message = 1;</code>
   */
  private void setSdpMessageBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    sdpMessage_ = value.toStringUtf8();
  }

  public static final int SDP_MLINE_INDEX_FIELD_NUMBER = 2;
  private int sdpMlineIndex_;
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional int32 sdp_mline_index = 2;</code>
   */
  public int getSdpMlineIndex() {
    return sdpMlineIndex_;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional int32 sdp_mline_index = 2;</code>
   */
  private void setSdpMlineIndex(int value) {
    
    sdpMlineIndex_ = value;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional int32 sdp_mline_index = 2;</code>
   */
  private void clearSdpMlineIndex() {
    
    sdpMlineIndex_ = 0;
  }

  public static final int SDP_MID_FIELD_NUMBER = 3;
  private java.lang.String sdpMid_;
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_mid = 3;</code>
   */
  public java.lang.String getSdpMid() {
    return sdpMid_;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_mid = 3;</code>
   */
  public com.google.protobuf.ByteString
      getSdpMidBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(sdpMid_);
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_mid = 3;</code>
   */
  private void setSdpMid(
      java.lang.String value) {
    if (value == null) {
    throw new NullPointerException();
  }
  
    sdpMid_ = value;
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_mid = 3;</code>
   */
  private void clearSdpMid() {
    
    sdpMid_ = getDefaultInstance().getSdpMid();
  }
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>optional string sdp_mid = 3;</code>
   */
  private void setSdpMidBytes(
      com.google.protobuf.ByteString value) {
    if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
    
    sdpMid_ = value.toStringUtf8();
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!sdpMessage_.isEmpty()) {
      output.writeString(1, getSdpMessage());
    }
    if (sdpMlineIndex_ != 0) {
      output.writeInt32(2, sdpMlineIndex_);
    }
    if (!sdpMid_.isEmpty()) {
      output.writeString(3, getSdpMid());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (!sdpMessage_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(1, getSdpMessage());
    }
    if (sdpMlineIndex_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, sdpMlineIndex_);
    }
    if (!sdpMid_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeStringSize(3, getSdpMid());
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static org.chromium.components.sync.protocol.IceCandidateMessage parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.chromium.components.sync.protocol.IceCandidateMessage prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * <pre>
   * Used to exchange ice candidate messages between peers for webRTC connection.
   * </pre>
   *
   * Protobuf type {@code chrome_browser_sharing.IceCandidateMessage}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        org.chromium.components.sync.protocol.IceCandidateMessage, Builder> implements
      // @@protoc_insertion_point(builder_implements:chrome_browser_sharing.IceCandidateMessage)
      org.chromium.components.sync.protocol.IceCandidateMessageOrBuilder {
    // Construct using org.chromium.components.sync.protocol.IceCandidateMessage.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_message = 1;</code>
     */
    public java.lang.String getSdpMessage() {
      return instance.getSdpMessage();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_message = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSdpMessageBytes() {
      return instance.getSdpMessageBytes();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_message = 1;</code>
     */
    public Builder setSdpMessage(
        java.lang.String value) {
      copyOnWrite();
      instance.setSdpMessage(value);
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_message = 1;</code>
     */
    public Builder clearSdpMessage() {
      copyOnWrite();
      instance.clearSdpMessage();
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_message = 1;</code>
     */
    public Builder setSdpMessageBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSdpMessageBytes(value);
      return this;
    }

    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional int32 sdp_mline_index = 2;</code>
     */
    public int getSdpMlineIndex() {
      return instance.getSdpMlineIndex();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional int32 sdp_mline_index = 2;</code>
     */
    public Builder setSdpMlineIndex(int value) {
      copyOnWrite();
      instance.setSdpMlineIndex(value);
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional int32 sdp_mline_index = 2;</code>
     */
    public Builder clearSdpMlineIndex() {
      copyOnWrite();
      instance.clearSdpMlineIndex();
      return this;
    }

    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_mid = 3;</code>
     */
    public java.lang.String getSdpMid() {
      return instance.getSdpMid();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_mid = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSdpMidBytes() {
      return instance.getSdpMidBytes();
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_mid = 3;</code>
     */
    public Builder setSdpMid(
        java.lang.String value) {
      copyOnWrite();
      instance.setSdpMid(value);
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_mid = 3;</code>
     */
    public Builder clearSdpMid() {
      copyOnWrite();
      instance.clearSdpMid();
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>optional string sdp_mid = 3;</code>
     */
    public Builder setSdpMidBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setSdpMidBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:chrome_browser_sharing.IceCandidateMessage)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new org.chromium.components.sync.protocol.IceCandidateMessage();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        org.chromium.components.sync.protocol.IceCandidateMessage other = (org.chromium.components.sync.protocol.IceCandidateMessage) arg1;
        sdpMessage_ = visitor.visitString(!sdpMessage_.isEmpty(), sdpMessage_,
            !other.sdpMessage_.isEmpty(), other.sdpMessage_);
        sdpMlineIndex_ = visitor.visitInt(sdpMlineIndex_ != 0, sdpMlineIndex_,
            other.sdpMlineIndex_ != 0, other.sdpMlineIndex_);
        sdpMid_ = visitor.visitString(!sdpMid_.isEmpty(), sdpMid_,
            !other.sdpMid_.isEmpty(), other.sdpMid_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                String s = input.readStringRequireUtf8();

                sdpMessage_ = s;
                break;
              }
              case 16: {

                sdpMlineIndex_ = input.readInt32();
                break;
              }
              case 26: {
                String s = input.readStringRequireUtf8();

                sdpMid_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (org.chromium.components.sync.protocol.IceCandidateMessage.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:chrome_browser_sharing.IceCandidateMessage)
  private static final org.chromium.components.sync.protocol.IceCandidateMessage DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new IceCandidateMessage();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static org.chromium.components.sync.protocol.IceCandidateMessage getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<IceCandidateMessage> PARSER;

  public static com.google.protobuf.Parser<IceCandidateMessage> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

